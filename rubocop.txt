Inspecting 83 files
CCCCCCCCWCCCWWC...C.CCCCCCCCCWCCCCCCCCCCCCCCCCCCWCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:1:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
source "https://rubygems.org"
       ^^^^^^^^^^^^^^^^^^^^^^
Gemfile:4:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ruby "3.1.2"
     ^^^^^^^
Gemfile:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rails", "~> 7.0.3"
    ^^^^^^^
Gemfile:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rails", "~> 7.0.3"
             ^^^^^^^^^^
Gemfile:10:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "sprockets-rails"
    ^^^^^^^^^^^^^^^^^
Gemfile:13:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "pg", "~> 1.1"
    ^^^^
Gemfile:13:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "pg", "~> 1.1"
          ^^^^^^^^
Gemfile:16:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "puma", "~> 5.0"
    ^^^^^^
Gemfile:16:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "puma", "~> 5.0"
            ^^^^^^^^
Gemfile:19:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "importmap-rails"
    ^^^^^^^^^^^^^^^^^
Gemfile:22:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "turbo-rails"
    ^^^^^^^^^^^^^
Gemfile:25:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "stimulus-rails"
    ^^^^^^^^^^^^^^^^
Gemfile:28:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "jbuilder"
    ^^^^^^^^^^
Gemfile:30:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rexml"
    ^^^^^^^
Gemfile:31:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem omniauth-rails_csrf_protection should appear before rexml.
gem "omniauth-rails_csrf_protection"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:31:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "omniauth-rails_csrf_protection"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:35:18: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem 'simplecov', :require => false
                 ^^^^^^^^^^^
Gemfile:42:101: C: Layout/LineLength: Line is too long. [111/100]
# Use Active Model has_secure_password [https://guides.rubyonrails.org/active_model_basics.html#securepassword]
                                                                                                    ^^^^^^^^^^^
Gemfile:46:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
    ^^^^^^^^^^^^^
Gemfile:46:34: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
                                 ^
Gemfile:46:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
                                                             ^
Gemfile:49:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "bootsnap", require: false
    ^^^^^^^^^^
Gemfile:59:101: C: Layout/LineLength: Line is too long. [111/100]
# Use Active Storage variants [https://guides.rubyonrails.org/active_storage_overview.html#transforming-images]
                                                                                                    ^^^^^^^^^^^
Gemfile:64:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
^^
Gemfile:64:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
      ^^^^^^^
Gemfile:64:30: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
                             ^
Gemfile:64:50: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
                                                 ^
Gemfile:68:22: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  gem 'rubocop-rspec' 
                     ^
Gemfile:69:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
Gemfile:74:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  gem "web-console"
^^
Gemfile:74:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "web-console"
      ^^^^^^^^^^^^^
Gemfile:75:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem rspec-rails should appear before web-console.
  gem "rspec-rails"
  ^^^^^^^^^^^^^^^^^
Gemfile:75:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "rspec-rails"
      ^^^^^^^^^^^^^
Gemfile:76:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem brakeman should appear before rspec-rails.
  gem "brakeman"
  ^^^^^^^^^^^^^^
Gemfile:76:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "brakeman"
      ^^^^^^^^^^
Gemfile:81:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 5).
  # gem "spring"
  ^^^^^^^^^^^^^^
Gemfile:86:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  gem "capybara", ">= 3.26"
^^
Gemfile:86:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "capybara", ">= 3.26"
      ^^^^^^^^^^
Gemfile:86:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "capybara", ">= 3.26"
                  ^^^^^^^^^
Gemfile:87:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "selenium-webdriver"
      ^^^^^^^^^^^^^^^^^^^^
Gemfile:88:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "webdrivers"
      ^^^^^^^^^^^^
Gemfile:89:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem database_cleaner-active_record should appear before webdrivers.
  gem 'database_cleaner-active_record'
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:90:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
Gemfile:94:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "yaml_db"
    ^^^^^^^^^
Gemfile:96:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tailwindcss-rails", "~> 2.0"
    ^^^^^^^^^^^^^^^^^^^
Gemfile:96:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tailwindcss-rails", "~> 2.0"
                         ^^^^^^^^
app/channels/application_cable/channel.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  class Channel < ActionCable::Channel::Base
^^
app/channels/application_cable/connection.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  class Connection < ActionCable::Connection::Base
^^
app/controllers/account_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def index
^^
app/controllers/account_controller.rb:4:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = current_admin
  ^^
app/controllers/admins/omniauth_callbacks_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def google_oauth2
^^
app/controllers/admins/omniauth_callbacks_controller.rb:3:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    admin = Admin.from_google(**from_google_params)
  ^^
app/controllers/admins/omniauth_callbacks_controller.rb:5:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      sign_out_all_scopes
    ^^
app/controllers/admins/omniauth_callbacks_controller.rb:6:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      flash[:success] = t 'devise.omniauth_callbacks.success', kind: 'Google'
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:7:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      sign_in_and_redirect admin, event: :authentication
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:9:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      flash[:alert] = t 'devise.omniauth_callbacks.failure', kind: 'Google', reason: "#{auth.info.email} is not authorized."
    ^^
app/controllers/admins/omniauth_callbacks_controller.rb:9:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      flash[:alert] = t 'devise.omniauth_callbacks.failure', kind: 'Google', reason: "#{auth.info.email} is not authorized."
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:9:101: C: [Correctable] Layout/LineLength: Line is too long. [124/100]
      flash[:alert] = t 'devise.omniauth_callbacks.failure', kind: 'Google', reason: "#{auth.info.email} is not authorized."
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:10:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to new_admin_session_path
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:14:3: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like protected.
  protected
  ^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:16:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def after_omniauth_failure_path_for(_scope)
^^
app/controllers/admins/omniauth_callbacks_controller.rb:17:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    new_admin_session_path
  ^^
app/controllers/admins/omniauth_callbacks_controller.rb:20:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def after_sign_in_path_for(resource_or_scope)
^^
app/controllers/admins/omniauth_callbacks_controller.rb:21:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    stored_location_for(resource_or_scope) || root_path
  ^^
app/controllers/admins/omniauth_callbacks_controller.rb:24:3: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
  private
  ^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:26:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def from_google_params
^^
app/controllers/admins/omniauth_callbacks_controller.rb:27:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @from_google_params ||= {
  ^^
app/controllers/admins/omniauth_callbacks_controller.rb:28:7: C: [Correctable] Layout/FirstHashElementIndentation: Use 5 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
      uid: auth.uid,
      ^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:35:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def auth
^^
app/controllers/admins/omniauth_callbacks_controller.rb:36:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @auth ||= request.env['omniauth.auth']
  ^^
app/controllers/admins/sessions_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def after_sign_out_path_for(_resource_or_scope)
^^
app/controllers/admins/sessions_controller.rb:3:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    new_admin_session_path
  ^^
app/controllers/admins/sessions_controller.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def after_sign_in_path_for(resource_or_scope)
^^
app/controllers/admins/sessions_controller.rb:7:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    stored_location_for(resource_or_scope) || root_path
  ^^
app/controllers/admins/sessions_controller.rb:9:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/controllers/admins_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before_action :check_user_approval
^^
app/controllers/admins_controller.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before_action :set_admin, only: %i[ show edit update destroy update_approval]
^^
app/controllers/admins_controller.rb:3:38: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_admin, only: %i[ show edit update destroy update_approval]
                                     ^
app/controllers/admins_controller.rb:4:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admins_controller.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def update_approval
^^
app/controllers/admins_controller.rb:7:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    if current_admin.role_id == 1 || current_admin.role_id >= 0
  ^^
app/controllers/admins_controller.rb:8:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      respond_to do |format| 
    ^^
app/controllers/admins_controller.rb:8:29: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
      respond_to do |format| 
                            ^
app/controllers/admins_controller.rb:9:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        if @user.update(is_approved: true)
      ^^
app/controllers/admins_controller.rb:10:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          format.html { redirect_to users_to_approve_path, notice: "User #{@user.first_name} #{@user.last_name} was successfully approved." }
        ^^
app/controllers/admins_controller.rb:10:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.html { redirect_to users_to_approve_path, notice: "User #{@user.first_name} #{@user.last_name} was successfully approved." }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:10:101: C: [Correctable] Layout/LineLength: Line is too long. [141/100]
          format.html { redirect_to users_to_approve_path, notice: "User #{@user.first_name} #{@user.last_name} was successfully approved." }
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:11:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render :show, status: :ok, location: @user }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:13:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          format.html { render :edit, status: :unprocessable_entity }
        ^^
app/controllers/admins_controller.rb:13:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.html { render :edit, status: :unprocessable_entity }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:14:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render json: @user.errors, status: :unprocessable_entity }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:19:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      respond_to do |format|
    ^^
app/controllers/admins_controller.rb:20:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
      ^^
app/controllers/admins_controller.rb:20:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:20:57: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:20:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:20:101: C: [Correctable] Layout/LineLength: Line is too long. [131/100]
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:20:131: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                                                                                                  ^
app/controllers/admins_controller.rb:25:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def edit
^^
app/controllers/admins_controller.rb:25:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/admins_controller.rb:28:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def show
^^
app/controllers/admins_controller.rb:28:3: C: [Correctable] Rails/ActionOrder: Action show should appear before edit.
  def show ...
  ^^^^^^^^
app/controllers/admins_controller.rb:28:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/admins_controller.rb:31:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def destroy
^^
app/controllers/admins_controller.rb:32:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user.destroy
  ^^
app/controllers/admins_controller.rb:32:11: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @user.destroy
          ^^^^^^^
app/controllers/admins_controller.rb:34:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      format.html { redirect_to users_path, notice: "User was successfully destroyed." }
    ^^
app/controllers/admins_controller.rb:34:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_to users_path, notice: "User was successfully destroyed." }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:34:53: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      format.html { redirect_to users_path, notice: "User was successfully destroyed." }
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:34:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to users_path, notice: "User was successfully destroyed." }
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:35:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.json { head :no_content }
                    ^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:38:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admins_controller.rb:40:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def update
^^
app/controllers/admins_controller.rb:40:3: C: [Correctable] Rails/ActionOrder: Action update should appear before destroy.
  def update ...
  ^^^^^^^^^^
app/controllers/admins_controller.rb:42:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    logger.info "params id: #{current_admin.email} and current_admin id #{@user.email}"
  ^^
app/controllers/admins_controller.rb:42:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    logger.info "params id: #{current_admin.email} and current_admin id #{@user.email}"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:43:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    logger.info "#{current_admin.email == @user.email}"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:43:17: C: [Correctable] Style/RedundantInterpolation: Prefer to_s over string interpolation.
    logger.info "#{current_admin.email == @user.email}"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:44:8: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if (current_admin.role_id == 1 || current_admin.role_id >= 0 || current_admin.email == @user.email)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:44:101: C: Layout/LineLength: Line is too long. [103/100]
    if (current_admin.role_id == 1 || current_admin.role_id >= 0 || current_admin.email == @user.email)
                                                                                                    ^^^
app/controllers/admins_controller.rb:45:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      respond_to do |format|
    ^^
app/controllers/admins_controller.rb:46:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        if @user.update(admin_params)
      ^^
app/controllers/admins_controller.rb:47:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          format.html { redirect_to user_url(@user), notice: "User was successfully updated." }
        ^^
app/controllers/admins_controller.rb:47:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.html { redirect_to user_url(@user), notice: "User was successfully updated." }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:47:62: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
          format.html { redirect_to user_url(@user), notice: "User was successfully updated." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:47:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          format.html { redirect_to user_url(@user), notice: "User was successfully updated." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:48:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render :show, status: :ok, location: @user }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:50:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          format.html { render :edit, status: :unprocessable_entity }
        ^^
app/controllers/admins_controller.rb:50:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.html { render :edit, status: :unprocessable_entity }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:51:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render json: @user.errors, status: :unprocessable_entity }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:56:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      respond_to do |format|
    ^^
app/controllers/admins_controller.rb:57:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to accounts_url, notice: "You do not have access to that update action. Contact your adminstrator for help."}
      ^^
app/controllers/admins_controller.rb:57:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to accounts_url, notice: "You do not have access to that update action. Contact your adminstrator for help."}
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:57:57: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to accounts_url, notice: "You do not have access to that update action. Contact your adminstrator for help."}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:57:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to accounts_url, notice: "You do not have access to that update action. Contact your adminstrator for help."}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:57:101: C: [Correctable] Layout/LineLength: Line is too long. [140/100]
        format.html { redirect_to accounts_url, notice: "You do not have access to that update action. Contact your adminstrator for help."}
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:57:140: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
        format.html { redirect_to accounts_url, notice: "You do not have access to that update action. Contact your adminstrator for help."}
                                                                                                                                           ^
app/controllers/admins_controller.rb:63:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def add_role
^^
app/controllers/admins_controller.rb:64:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    user = Admin.find(params[:id])
  ^^
app/controllers/admins_controller.rb:68:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if !user.add_role(role.id)
    ^^
app/controllers/admins_controller.rb:68:7: C: [Correctable] Style/NegatedIfElseCondition: Invert the negated condition and swap the if-else branches.
      if !user.add_role(role.id) ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:69:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
      ^^
app/controllers/admins_controller.rb:69:9: C: [Correctable] Style/IdenticalConditionalBranches: Move format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." } out of the conditional.
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:69:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:69:59: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:69:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:69:101: C: [Correctable] Layout/LineLength: Line is too long. [110/100]
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
                                                                                                    ^^^^^^^^^^
app/controllers/admins_controller.rb:70:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json:{ message: "Role has already been assigned to the user. Could not assign it again" }, status: :expectation_failed }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:70:34: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
        format.json { render json:{ message: "Role has already been assigned to the user. Could not assign it again" }, status: :expectation_failed }
                                 ^
app/controllers/admins_controller.rb:70:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.json { render json:{ message: "Role has already been assigned to the user. Could not assign it again" }, status: :expectation_failed }
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:70:101: C: [Correctable] Layout/LineLength: Line is too long. [149/100]
        format.json { render json:{ message: "Role has already been assigned to the user. Could not assign it again" }, status: :expectation_failed }
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:72:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
      ^^
app/controllers/admins_controller.rb:72:9: C: [Correctable] Style/IdenticalConditionalBranches: Move format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." } out of the conditional.
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:72:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:72:59: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:72:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:72:101: C: [Correctable] Layout/LineLength: Line is too long. [110/100]
        format.html { redirect_to user_url(user), notice: "Role has been successfully assigned to the user." }
                                                                                                    ^^^^^^^^^^
app/controllers/admins_controller.rb:73:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: user }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:77:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/admins_controller.rb:78:3: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
  private
  ^^^^^^^
app/controllers/admins_controller.rb:78:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/admins_controller.rb:80:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def set_admin
^^
app/controllers/admins_controller.rb:81:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = Admin.find(params[:id])
  ^^
app/controllers/admins_controller.rb:85:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def admin_params
^^
app/controllers/admins_controller.rb:86:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    params.require(:admin).permit(:email, :first_name, :last_name, :role_id,:address,:uin,:aor_completed,:boat_waiver_completed,:dues_completed, :is_approved)
  ^^
app/controllers/admins_controller.rb:86:76: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    params.require(:admin).permit(:email, :first_name, :last_name, :role_id,:address,:uin,:aor_completed,:boat_waiver_completed,:dues_completed, :is_approved)
                                                                           ^
app/controllers/admins_controller.rb:86:85: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    params.require(:admin).permit(:email, :first_name, :last_name, :role_id,:address,:uin,:aor_completed,:boat_waiver_completed,:dues_completed, :is_approved)
                                                                                    ^
app/controllers/admins_controller.rb:86:90: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    params.require(:admin).permit(:email, :first_name, :last_name, :role_id,:address,:uin,:aor_completed,:boat_waiver_completed,:dues_completed, :is_approved)
                                                                                         ^
app/controllers/admins_controller.rb:86:101: C: [Correctable] Layout/LineLength: Line is too long. [158/100]
    params.require(:admin).permit(:email, :first_name, :last_name, :role_id,:address,:uin,:aor_completed,:boat_waiver_completed,:dues_completed, :is_approved)
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:86:105: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    params.require(:admin).permit(:email, :first_name, :last_name, :role_id,:address,:uin,:aor_completed,:boat_waiver_completed,:dues_completed, :is_approved)
                                                                                                        ^
app/controllers/admins_controller.rb:86:128: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    params.require(:admin).permit(:email, :first_name, :last_name, :role_id,:address,:uin,:aor_completed,:boat_waiver_completed,:dues_completed, :is_approved)
                                                                                                                               ^
app/controllers/admins_controller.rb:89:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def delete
^^
app/controllers/admins_controller.rb:90:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @users = Admin.find(params[:id])
  ^^
app/controllers/admins_controller.rb:93:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
app/controllers/application_controller.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    before_action :authenticate_admin!
^^^^
app/controllers/application_controller.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    before_action :check_user_approval
^^^^
app/controllers/application_controller.rb:5:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/application_controller.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    include ApplicationHelper
^^^^
app/controllers/application_controller.rb:8:5: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
    private
    ^^^^^^^
app/controllers/application_controller.rb:9:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/application_controller.rb:11:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def check_user_approval
^^^^
app/controllers/application_controller.rb:12:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
        logger.info(params)
    ^^^^
app/controllers/application_controller.rb:14:101: C: Layout/LineLength: Line is too long. [107/100]
            # they will be able to access the account page and sign out path if the account is not approved
                                                                                                    ^^^^^^^
app/controllers/application_controller.rb:15:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
            if !(params[:controller] == "account" && params[:action] == "index") && !(params[:controller] == "admins/sessions" && params[:action] == "destroy")
        ^^^^
app/controllers/application_controller.rb:15:13: C: [Correctable] Style/SoleNestedConditional: Consider merging nested conditions into outer if conditions.
            if !(params[:controller] == "account" && params[:action] == "index") && !(params[:controller] == "admins/sessions" && params[:action] == "destroy")
            ^^
app/controllers/application_controller.rb:15:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            if !(params[:controller] == "account" && params[:action] == "index") && !(params[:controller] == "admins/sessions" && params[:action] == "destroy")
                                        ^^^^^^^^^
app/controllers/application_controller.rb:15:73: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            if !(params[:controller] == "account" && params[:action] == "index") && !(params[:controller] == "admins/sessions" && params[:action] == "destroy")
                                                                        ^^^^^^^
app/controllers/application_controller.rb:15:101: C: Layout/LineLength: Line is too long. [159/100]
            if !(params[:controller] == "account" && params[:action] == "index") && !(params[:controller] == "admins/sessions" && params[:action] == "destroy")
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:15:110: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            if !(params[:controller] == "account" && params[:action] == "index") && !(params[:controller] == "admins/sessions" && params[:action] == "destroy")
                                                                                                             ^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:15:150: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            if !(params[:controller] == "account" && params[:action] == "index") && !(params[:controller] == "admins/sessions" && params[:action] == "destroy")
                                                                                                                                                     ^^^^^^^^^
app/controllers/application_controller.rb:16:13: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
                flash[:alert] = "Your account is not yet approved. Please wait for approval or contact your Administrators."
            ^^^^
app/controllers/application_controller.rb:16:33: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
                flash[:alert] = "Your account is not yet approved. Please wait for approval or contact your Administrators."
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:16:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                flash[:alert] = "Your account is not yet approved. Please wait for approval or contact your Administrators."
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:16:101: C: [Correctable] Layout/LineLength: Line is too long. [124/100]
                flash[:alert] = "Your account is not yet approved. Please wait for approval or contact your Administrators."
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:17:17: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
                redirect_to accounts_path
                ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:19:12: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        end 
           ^
app/controllers/application_controller.rb:22:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/dashboards_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def show
^^^^
app/controllers/dashboards_controller.rb:2:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def show ...
    ^^^^^^^^
app/controllers/dashboards_controller.rb:4:3: W: [Correctable] Layout/EndAlignment: end at 4, 2 is not aligned with class at 1, 0.
  end
  ^^^
app/controllers/dashboards_controller.rb:4:6: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
  end
     
app/controllers/help_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def index
^^^^
app/controllers/help_controller.rb:2:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def index ...
    ^^^^^^^^^
app/controllers/help_controller.rb:4:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/controllers/receipts_controller.rb:2:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/receipts_controller.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before_action :set_receipt, only: %i[ show edit update destroy ]
^^
app/controllers/receipts_controller.rb:3:40: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_receipt, only: %i[ show edit update destroy ]
                                       ^
app/controllers/receipts_controller.rb:3:65: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_receipt, only: %i[ show edit update destroy ]
                                                                ^
app/controllers/receipts_controller.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def index
^^
app/controllers/receipts_controller.rb:7:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = current_admin
  ^^
app/controllers/receipts_controller.rb:12:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def show
^^
app/controllers/receipts_controller.rb:13:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = current_admin
  ^^
app/controllers/receipts_controller.rb:17:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def new
^^
app/controllers/receipts_controller.rb:18:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = current_admin
  ^^
app/controllers/receipts_controller.rb:23:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def edit
^^
app/controllers/receipts_controller.rb:24:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = current_admin
  ^^
app/controllers/receipts_controller.rb:28:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def create
^^
app/controllers/receipts_controller.rb:29:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = current_admin
  ^^
app/controllers/receipts_controller.rb:33:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if has_info_filled_out(params[:receipt][:user_id])
    ^^
app/controllers/receipts_controller.rb:34:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        if @receipt.save
      ^^
app/controllers/receipts_controller.rb:35:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          format.html { redirect_to receipt_url(@receipt), notice: "Receipt was successfully created." }
        ^^
app/controllers/receipts_controller.rb:35:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.html { redirect_to receipt_url(@receipt), notice: "Receipt was successfully created." }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:35:68: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
          format.html { redirect_to receipt_url(@receipt), notice: "Receipt was successfully created." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:35:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          format.html { redirect_to receipt_url(@receipt), notice: "Receipt was successfully created." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:35:101: C: [Correctable] Layout/LineLength: Line is too long. [104/100]
          format.html { redirect_to receipt_url(@receipt), notice: "Receipt was successfully created." }
                                                                                                    ^^^^
app/controllers/receipts_controller.rb:36:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render :show, status: :created, location: @receipt }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:38:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          format.html { render :new, status: :unprocessable_entity }
        ^^
app/controllers/receipts_controller.rb:38:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.html { render :new, status: :unprocessable_entity }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:39:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render json: @receipt.errors, status: :unprocessable_entity }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:42:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { render :new, status: :unprocessable_entity }
      ^^
app/controllers/receipts_controller.rb:42:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :new, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:43:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @receipt.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:49:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def update
^^
app/controllers/receipts_controller.rb:50:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    respond_to do |format|
  ^^
app/controllers/receipts_controller.rb:51:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if @receipt.update(receipt_params)
    ^^
app/controllers/receipts_controller.rb:52:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to receipt_url(@receipt), notice: "Receipt was successfully updated." }
      ^^
app/controllers/receipts_controller.rb:52:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to receipt_url(@receipt), notice: "Receipt was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:52:66: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to receipt_url(@receipt), notice: "Receipt was successfully updated." }
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:52:66: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to receipt_url(@receipt), notice: "Receipt was successfully updated." }
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:52:101: C: [Correctable] Layout/LineLength: Line is too long. [102/100]
        format.html { redirect_to receipt_url(@receipt), notice: "Receipt was successfully updated." }
                                                                                                    ^^
app/controllers/receipts_controller.rb:53:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @receipt }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:55:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { render :edit, status: :unprocessable_entity }
      ^^
app/controllers/receipts_controller.rb:55:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:56:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @receipt.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def destroy
^^
app/controllers/receipts_controller.rb:63:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @receipt.destroy
  ^^
app/controllers/receipts_controller.rb:63:14: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @receipt.destroy
             ^^^^^^^
app/controllers/receipts_controller.rb:66:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      format.html { redirect_to receipts_url, notice: "Receipt was successfully destroyed." }
    ^^
app/controllers/receipts_controller.rb:66:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_to receipts_url, notice: "Receipt was successfully destroyed." }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:66:55: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      format.html { redirect_to receipts_url, notice: "Receipt was successfully destroyed." }
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:66:55: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to receipts_url, notice: "Receipt was successfully destroyed." }
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:67:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.json { head :no_content }
                    ^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:71:3: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
  private
  ^^^^^^^
app/controllers/receipts_controller.rb:71:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/receipts_controller.rb:73:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def set_receipt
^^^^
app/controllers/receipts_controller.rb:73:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_receipt ...
    ^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:74:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @receipt = Receipt.find(params[:id])
    ^^
app/controllers/receipts_controller.rb:78:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def receipt_params
^^^^
app/controllers/receipts_controller.rb:78:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def receipt_params ...
    ^^^^^^^^^^^^^^^^^^
app/controllers/receipts_controller.rb:79:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      params.require(:receipt).permit(:user_id, :value, :date_made, :date_approved, :date_refunded, :stage, :image_link)
    ^^
app/controllers/receipts_controller.rb:79:101: C: [Correctable] Layout/LineLength: Line is too long. [120/100]
      params.require(:receipt).permit(:user_id, :value, :date_made, :date_approved, :date_refunded, :stage, :image_link)
                                                                                                    ^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before_action :set_role, only: %i[ show edit update destroy ]
^^
app/controllers/roles_controller.rb:2:37: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_role, only: %i[ show edit update destroy ]
                                    ^
app/controllers/roles_controller.rb:2:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_role, only: %i[ show edit update destroy ]
                                                             ^
app/controllers/roles_controller.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def index
^^
app/controllers/roles_controller.rb:6:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @roles = Role.all
  ^^
app/controllers/roles_controller.rb:10:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def show
^^
app/controllers/roles_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/roles_controller.rb:14:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def new
^^
app/controllers/roles_controller.rb:15:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @role = Role.new
  ^^
app/controllers/roles_controller.rb:19:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def edit
^^
app/controllers/roles_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/roles_controller.rb:23:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def create
^^
app/controllers/roles_controller.rb:24:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @role = Role.new(role_params)
  ^^
app/controllers/roles_controller.rb:27:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if @role.save
    ^^
app/controllers/roles_controller.rb:28:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to role_url(@role), notice: "Role was successfully created." }
      ^^
app/controllers/roles_controller.rb:28:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to role_url(@role), notice: "Role was successfully created." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:28:60: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to role_url(@role), notice: "Role was successfully created." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:28:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to role_url(@role), notice: "Role was successfully created." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:29:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :created, location: @role }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:31:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { render :new, status: :unprocessable_entity }
      ^^
app/controllers/roles_controller.rb:31:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :new, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:32:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @role.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:38:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def update
^^
app/controllers/roles_controller.rb:39:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    respond_to do |format|
  ^^
app/controllers/roles_controller.rb:40:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if @role.update(role_params)
    ^^
app/controllers/roles_controller.rb:41:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to role_url(@role), notice: "Role was successfully updated." }
      ^^
app/controllers/roles_controller.rb:41:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to role_url(@role), notice: "Role was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:41:60: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to role_url(@role), notice: "Role was successfully updated." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:41:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to role_url(@role), notice: "Role was successfully updated." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:42:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @role }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:44:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { render :edit, status: :unprocessable_entity }
      ^^
app/controllers/roles_controller.rb:44:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:45:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @role.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:51:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def destroy
^^
app/controllers/roles_controller.rb:52:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @role.destroy
  ^^
app/controllers/roles_controller.rb:52:11: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @role.destroy
          ^^^^^^^
app/controllers/roles_controller.rb:55:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      format.html { redirect_to roles_url, notice: "Role was successfully destroyed." }
    ^^
app/controllers/roles_controller.rb:55:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_to roles_url, notice: "Role was successfully destroyed." }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:55:52: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      format.html { redirect_to roles_url, notice: "Role was successfully destroyed." }
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:55:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to roles_url, notice: "Role was successfully destroyed." }
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:56:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.json { head :no_content }
                    ^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:59:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/roles_controller.rb:60:3: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
  private
  ^^^^^^^
app/controllers/roles_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/roles_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def set_role
^^^^
app/controllers/roles_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_role ...
    ^^^^^^^^^^^^
app/controllers/roles_controller.rb:63:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @role = Role.find(params[:id])
    ^^
app/controllers/roles_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def role_params
^^^^
app/controllers/roles_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def role_params ...
    ^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:68:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      params.require(:role).permit(:role_id, :role_name)
    ^^
app/controllers/users_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before_action :set_user, only: %i[ show edit update destroy]
^^
app/controllers/users_controller.rb:2:3: C: Rails/LexicallyScopedActionFilter: edit, update are not explicitly defined on the class.
  before_action :set_user, only: %i[ show edit update destroy]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:2:37: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_user, only: %i[ show edit update destroy]
                                    ^
app/controllers/users_controller.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def search
^^
app/controllers/users_controller.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @products = Admin.where('is_approved = true AND first_name LIKE ? AND last_name LIKE ?', "%#{params[:first_name]}%", "%#{params[:last_name]}%")
  ^^
app/controllers/users_controller.rb:5:101: C: [Correctable] Layout/LineLength: Line is too long. [147/100]
    @products = Admin.where('is_approved = true AND first_name LIKE ? AND last_name LIKE ?', "%#{params[:first_name]}%", "%#{params[:last_name]}%")
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:6:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    render json: @products
    ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:10:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def index
^^
app/controllers/users_controller.rb:12:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = current_admin
  ^^
app/controllers/users_controller.rb:13:49: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    if @user.role_id == 1 || @user.role_id >= -1 
                                                ^
app/controllers/users_controller.rb:15:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @users = if params[:first_name].present? || params[:last_name].present?
    ^^
app/controllers/users_controller.rb:16:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not -7) spaces for indentation.
        Admin.where('is_approved = true AND first_name LIKE ? AND last_name LIKE ?', "%#{params[:first_name]}%", "%#{params[:last_name]}%")
        ^^^^^^^
app/controllers/users_controller.rb:16:101: C: [Correctable] Layout/LineLength: Line is too long. [139/100]
        Admin.where('is_approved = true AND first_name LIKE ? AND last_name LIKE ?', "%#{params[:first_name]}%", "%#{params[:last_name]}%")
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:17:7: C: [Correctable] Layout/ElseAlignment: Align else with if.
      else
      ^^^^
app/controllers/users_controller.rb:18:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        Admin.where(is_approved: true) 
      ^^
app/controllers/users_controller.rb:18:39: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        Admin.where(is_approved: true) 
                                      ^
app/controllers/users_controller.rb:19:7: W: [Correctable] Layout/EndAlignment: end at 19, 6 is not aligned with if at 15, 15.
      end
      ^^^
app/controllers/users_controller.rb:22:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      respond_to do |format|
    ^^
app/controllers/users_controller.rb:23:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
      ^^
app/controllers/users_controller.rb:23:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:23:57: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:23:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:23:101: C: [Correctable] Layout/LineLength: Line is too long. [131/100]
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:23:131: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                                                                                                  ^
app/controllers/users_controller.rb:29:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def show
^^
app/controllers/users_controller.rb:29:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/users_controller.rb:32:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def approval
^^
app/controllers/users_controller.rb:34:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = current_admin
  ^^
app/controllers/users_controller.rb:35:49: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    if @user.role_id == 1 || @user.role_id >= -1 
                                                ^
app/controllers/users_controller.rb:37:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @users = if params[:first_name].present? || params[:last_name].present?
    ^^
app/controllers/users_controller.rb:38:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not -7) spaces for indentation.
        Admin.where('is_approved = false AND first_name LIKE ? AND last_name LIKE ?', "%#{params[:first_name]}%", "%#{params[:last_name]}%")
        ^^^^^^^
app/controllers/users_controller.rb:38:101: C: [Correctable] Layout/LineLength: Line is too long. [140/100]
        Admin.where('is_approved = false AND first_name LIKE ? AND last_name LIKE ?', "%#{params[:first_name]}%", "%#{params[:last_name]}%")
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:39:7: C: [Correctable] Layout/ElseAlignment: Align else with if.
      else
      ^^^^
app/controllers/users_controller.rb:40:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        Admin.where(is_approved: false) 
      ^^
app/controllers/users_controller.rb:40:40: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        Admin.where(is_approved: false) 
                                       ^
app/controllers/users_controller.rb:41:7: W: [Correctable] Layout/EndAlignment: end at 41, 6 is not aligned with if at 37, 15.
      end
      ^^^
app/controllers/users_controller.rb:44:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      respond_to do |format|
    ^^
app/controllers/users_controller.rb:45:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
      ^^
app/controllers/users_controller.rb:45:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:45:57: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:45:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:45:101: C: [Correctable] Layout/LineLength: Line is too long. [131/100]
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:45:131: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                                                                                                  ^
app/controllers/users_controller.rb:51:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def new
^^
app/controllers/users_controller.rb:52:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = User.new
  ^^
app/controllers/users_controller.rb:56:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def destroy
^^
app/controllers/users_controller.rb:58:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    if @user.role_id == 1 || @user.role_id >= 0
  ^^
app/controllers/users_controller.rb:59:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @user.destroy
    ^^
app/controllers/users_controller.rb:59:13: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
      @user.destroy
            ^^^^^^^
app/controllers/users_controller.rb:61:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to users_url, notice: "User was successfully destroyed." }
      ^^
app/controllers/users_controller.rb:61:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to users_url, notice: "User was successfully destroyed." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:61:54: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to users_url, notice: "User was successfully destroyed." }
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:61:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to users_url, notice: "User was successfully destroyed." }
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:62:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { head :no_content }
                      ^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:66:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      respond_to do |format|
    ^^
app/controllers/users_controller.rb:67:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
      ^^
app/controllers/users_controller.rb:67:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:67:57: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:67:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:67:101: C: [Correctable] Layout/LineLength: Line is too long. [131/100]
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:67:131: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
        format.html { redirect_to accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help."}
                                                                                                                                  ^
app/controllers/users_controller.rb:72:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users_controller.rb:73:3: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
  private
  ^^^^^^^
app/controllers/users_controller.rb:73:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/users_controller.rb:75:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def set_user
^^^^
app/controllers/users_controller.rb:75:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_user ...
    ^^^^^^^^^^^^
app/controllers/users_controller.rb:76:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @user = Admin.find(params[:id])
    ^^
app/controllers/users_controller.rb:80:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def delete
^^^^
app/controllers/users_controller.rb:80:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def delete ...
    ^^^^^^^^^^
app/controllers/users_controller.rb:81:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @users = Admin.find(params[:id])
    ^^
app/controllers/wakeboard_sets_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before_action :set_wakeboard_set, only: %i[ show edit update destroy ]
^^
app/controllers/wakeboard_sets_controller.rb:2:46: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_wakeboard_set, only: %i[ show edit update destroy ]
                                             ^
app/controllers/wakeboard_sets_controller.rb:2:71: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_wakeboard_set, only: %i[ show edit update destroy ]
                                                                      ^
app/controllers/wakeboard_sets_controller.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def index
^^
app/controllers/wakeboard_sets_controller.rb:6:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @wakeboard_sets = WakeboardSet.limit(10)
  ^^
app/controllers/wakeboard_sets_controller.rb:7:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/wakeboard_sets_controller.rb:8:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #.where("scheduled_date >= ? AND scheduled_date <= ?",
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:9:83: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    #  DateTime.current.beginning_of_week(start_date = :sunday).advance(hours: 8), 
                                                                                  ^
app/controllers/wakeboard_sets_controller.rb:11:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 7).
    #)
    ^^
app/controllers/wakeboard_sets_controller.rb:11:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #)
    ^^
app/controllers/wakeboard_sets_controller.rb:15:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def show
^^
app/controllers/wakeboard_sets_controller.rb:16:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @joinable = !SetRider.rider_exists?(current_admin.id, params[:id])
  ^^
app/controllers/wakeboard_sets_controller.rb:17:24: C: [Correctable] Rails/WhereEquals: Use where(wakeboard_set_id: params[:id]) instead of manually constructing SQL.
    @riders = SetRider.where("wakeboard_set_id = ?", params[:id]).joins(:admin).select(:first_name, :last_name, :as_dib)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:17:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @riders = SetRider.where("wakeboard_set_id = ?", params[:id]).joins(:admin).select(:first_name, :last_name, :as_dib)
                             ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:17:101: C: [Correctable] Layout/LineLength: Line is too long. [120/100]
    @riders = SetRider.where("wakeboard_set_id = ?", params[:id]).joins(:admin).select(:first_name, :last_name, :as_dib)
                                                                                                    ^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:18:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	@drivers = SetDriver.where("wakeboard_set_id = ?", params[:id]).joins(:admin).select(:first_name, :last_name)
^
app/controllers/wakeboard_sets_controller.rb:18:2: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
	@drivers = SetDriver.where("wakeboard_set_id = ?", params[:id]).joins(:admin).select(:first_name, :last_name)
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:18:23: C: [Correctable] Rails/WhereEquals: Use where(wakeboard_set_id: params[:id]) instead of manually constructing SQL.
	@drivers = SetDriver.where("wakeboard_set_id = ?", params[:id]).joins(:admin).select(:first_name, :last_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:18:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	@drivers = SetDriver.where("wakeboard_set_id = ?", params[:id]).joins(:admin).select(:first_name, :last_name)
                            ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:18:97: C: [Correctable] Layout/LineLength: Line is too long. [114/100]
	@drivers = SetDriver.where("wakeboard_set_id = ?", params[:id]).joins(:admin).select(:first_name, :last_name) ...
                                                                                                ^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:22:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def new
^^
app/controllers/wakeboard_sets_controller.rb:23:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @wakeboard_set = WakeboardSet.new
  ^^
app/controllers/wakeboard_sets_controller.rb:27:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def edit
^^
app/controllers/wakeboard_sets_controller.rb:27:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:31:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def create
^^
app/controllers/wakeboard_sets_controller.rb:32:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @wakeboard_set = WakeboardSet.new(wakeboard_set_params.merge(driver_count: 1))
  ^^
app/controllers/wakeboard_sets_controller.rb:35:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if @wakeboard_set.save
    ^^
app/controllers/wakeboard_sets_controller.rb:36:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	    user = current_admin
^
app/controllers/wakeboard_sets_controller.rb:36:6: C: [Correctable] Layout/IndentationWidth: Use 5 (not -1) spaces for indentation.
	    user = current_admin
     ^
app/controllers/wakeboard_sets_controller.rb:37:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	    driver1 = SetDriver.new(admin_id: user.id, wakeboard_set_id: @wakeboard_set.id)
^
app/controllers/wakeboard_sets_controller.rb:38:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        driver2 = SetDriver.new(admin_id: params[:wakeboard_set][:user_id], wakeboard_set_id: @wakeboard_set.id)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:38:101: C: [Correctable] Layout/LineLength: Line is too long. [112/100]
        driver2 = SetDriver.new(admin_id: params[:wakeboard_set][:user_id], wakeboard_set_id: @wakeboard_set.id)
                                                                                                    ^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:40:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        if driver1.save & driver2.save ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:40:9: W: [Correctable] Lint/EmptyConditionalBody: Avoid if branches without a body.
        if driver1.save & driver2.save ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:40:20: C: [Correctable] Rails/SaveBang: Use save! instead of save if the return value is not checked.
        if driver1.save & driver2.save
                   ^^^^
app/controllers/wakeboard_sets_controller.rb:42:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
app/controllers/wakeboard_sets_controller.rb:42:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/wakeboard_sets_controller.rb:43:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Wakeboard set was successfully created." }
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:43:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Wakeboard set was successfully created." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:43:78: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Wakeboard set was successfully created." }
                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:43:78: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Wakeboard set was successfully created." }
                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:43:101: C: [Correctable] Layout/LineLength: Line is too long. [120/100]
        format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Wakeboard set was successfully created." }
                                                                                                    ^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:44:9: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
        format.json { render :show, status: :created, location: @wakeboard_set }
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:44:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :created, location: @wakeboard_set }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:46:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { render :new, status: :unprocessable_entity }
      ^^
app/controllers/wakeboard_sets_controller.rb:46:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :new, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:47:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @wakeboard_set.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:53:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def update
^^
app/controllers/wakeboard_sets_controller.rb:54:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    respond_to do |format|
  ^^
app/controllers/wakeboard_sets_controller.rb:55:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if @wakeboard_set.update(wakeboard_set_params)
    ^^
app/controllers/wakeboard_sets_controller.rb:56:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Wakeboard set was successfully updated." }
      ^^
app/controllers/wakeboard_sets_controller.rb:56:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Wakeboard set was successfully updated." }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:56:78: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Wakeboard set was successfully updated." }
                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:56:78: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Wakeboard set was successfully updated." }
                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:56:101: C: [Correctable] Layout/LineLength: Line is too long. [120/100]
        format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Wakeboard set was successfully updated." }
                                                                                                    ^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:57:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @wakeboard_set }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:59:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { render :edit, status: :unprocessable_entity }
      ^^
app/controllers/wakeboard_sets_controller.rb:59:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { render :edit, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:60:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json: @wakeboard_set.errors, status: :unprocessable_entity }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:66:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def destroy
^^
app/controllers/wakeboard_sets_controller.rb:67:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @wakeboard_set.destroy
  ^^
app/controllers/wakeboard_sets_controller.rb:67:20: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @wakeboard_set.destroy
                   ^^^^^^^
app/controllers/wakeboard_sets_controller.rb:70:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      format.html { redirect_to wakeboard_sets_url, notice: "Wakeboard set was successfully destroyed." }
    ^^
app/controllers/wakeboard_sets_controller.rb:70:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_to wakeboard_sets_url, notice: "Wakeboard set was successfully destroyed." }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:70:61: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      format.html { redirect_to wakeboard_sets_url, notice: "Wakeboard set was successfully destroyed." }
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:70:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to wakeboard_sets_url, notice: "Wakeboard set was successfully destroyed." }
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:70:101: C: [Correctable] Layout/LineLength: Line is too long. [105/100]
      format.html { redirect_to wakeboard_sets_url, notice: "Wakeboard set was successfully destroyed." }
                                                                                                    ^^^^^
app/controllers/wakeboard_sets_controller.rb:71:21: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.json { head :no_content }
                    ^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:79:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def join
^^
app/controllers/wakeboard_sets_controller.rb:80:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @wakeboard_set = WakeboardSet.find(params[:id])
  ^^
app/controllers/wakeboard_sets_controller.rb:85:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if has_documents_signed
    ^^
app/controllers/wakeboard_sets_controller.rb:86:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        if  !@wakeboard_set.join(user, as_dib)
      ^^
app/controllers/wakeboard_sets_controller.rb:86:9: C: [Correctable] Style/NegatedIfElseCondition: Invert the negated condition and swap the if-else branches.
        if  !@wakeboard_set.join(user, as_dib) ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:86:11: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
        if  !@wakeboard_set.join(user, as_dib)
          ^
app/controllers/wakeboard_sets_controller.rb:87:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          format.html { redirect_to wakeboard_set_url(@wakeboard_set)}
        ^^
app/controllers/wakeboard_sets_controller.rb:87:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.html { redirect_to wakeboard_set_url(@wakeboard_set)}
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:87:70: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
          format.html { redirect_to wakeboard_set_url(@wakeboard_set)}
                                                                     ^
app/controllers/wakeboard_sets_controller.rb:88:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render json:{ message: "Unable to join set" }, status: :expectation_failed }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:88:36: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
          format.json { render json:{ message: "Unable to join set" }, status: :expectation_failed }
                                   ^
app/controllers/wakeboard_sets_controller.rb:88:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          format.json { render json:{ message: "Unable to join set" }, status: :expectation_failed }
                                               ^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:90:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Successfully joined set" }
        ^^
app/controllers/wakeboard_sets_controller.rb:90:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Successfully joined set" }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:90:80: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
          format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Successfully joined set" }
                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:90:80: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Successfully joined set" }
                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:90:101: C: [Correctable] Layout/LineLength: Line is too long. [106/100]
          format.html { redirect_to wakeboard_set_url(@wakeboard_set), notice: "Successfully joined set" }
                                                                                                    ^^^^^^
app/controllers/wakeboard_sets_controller.rb:91:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render :show, status: :ok, location: @wakeboard_set }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:94:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set)}
      ^^
app/controllers/wakeboard_sets_controller.rb:94:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set)}
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:94:68: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
        format.html { redirect_to wakeboard_set_url(@wakeboard_set)}
                                                                   ^
app/controllers/wakeboard_sets_controller.rb:95:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json:{ message: "Unable to join set" }, status: :expectation_failed }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:95:34: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
        format.json { render json:{ message: "Unable to join set" }, status: :expectation_failed }
                                 ^
app/controllers/wakeboard_sets_controller.rb:95:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.json { render json:{ message: "Unable to join set" }, status: :expectation_failed }
                                             ^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:98:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/controllers/wakeboard_sets_controller.rb:103:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def leave
^^
app/controllers/wakeboard_sets_controller.rb:104:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @set = WakeboardSet.find(params[:id])
  ^^
app/controllers/wakeboard_sets_controller.rb:109:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if !@set.leave(user)
    ^^
app/controllers/wakeboard_sets_controller.rb:109:7: C: [Correctable] Style/NegatedIfElseCondition: Invert the negated condition and swap the if-else branches.
      if !@set.leave(user) ...
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:110:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to wakeboard_set_url(@set), notice: "Unable to leave set" }
      ^^
app/controllers/wakeboard_sets_controller.rb:110:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to wakeboard_set_url(@set), notice: "Unable to leave set" }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:110:68: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to wakeboard_set_url(@set), notice: "Unable to leave set" }
                                                                   ^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:110:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to wakeboard_set_url(@set), notice: "Unable to leave set" }
                                                                   ^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:111:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render json:{ message: "Unable to leave set" }, status: :expectation_failed }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:111:34: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
        format.json { render json:{ message: "Unable to leave set" }, status: :expectation_failed }
                                 ^
app/controllers/wakeboard_sets_controller.rb:111:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.json { render json:{ message: "Unable to leave set" }, status: :expectation_failed }
                                             ^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:113:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        format.html { redirect_to wakeboard_set_url(@set), notice: "Successfully left set" }
      ^^
app/controllers/wakeboard_sets_controller.rb:113:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_to wakeboard_set_url(@set), notice: "Successfully left set" }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:113:68: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to wakeboard_set_url(@set), notice: "Successfully left set" }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:113:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to wakeboard_set_url(@set), notice: "Successfully left set" }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:114:23: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :show, status: :ok, location: @set }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:119:3: C: [Correctable] Layout/AccessModifierIndentation: Indent access modifiers like private.
  private
  ^^^^^^^
app/controllers/wakeboard_sets_controller.rb:119:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/wakeboard_sets_controller.rb:121:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def set_wakeboard_set
^^^^
app/controllers/wakeboard_sets_controller.rb:121:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_wakeboard_set ...
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:122:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @wakeboard_set = WakeboardSet.find(params[:id])
    ^^
app/controllers/wakeboard_sets_controller.rb:126:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def wakeboard_set_params
^^^^
app/controllers/wakeboard_sets_controller.rb:126:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def wakeboard_set_params ...
    ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:127:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      params.require(:wakeboard_set).permit(
    ^^
app/controllers/wakeboard_sets_controller.rb:128:9: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
        :dib_count,
        ^^^^^^^^^^
app/controllers/wakeboard_sets_controller.rb:134:24: C: [Correctable] Style/TrailingCommaInArguments: Avoid comma after the last parameter of a method call.
        :scheduled_date, 
                       ^
app/controllers/wakeboard_sets_controller.rb:134:25: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        :scheduled_date, 
                        ^
app/controllers/wakeboard_sets_controller.rb:135:7: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 3 (not 6)
      )
      ^
app/helpers/application_helper.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 0) spaces for indentation.
include UsersHelper 

app/helpers/application_helper.rb:2:20: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
include UsersHelper 
                   ^
app/helpers/users_helper.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def has_documents_signed
^^^^
app/helpers/users_helper.rb:2:9: C: Naming/PredicateName: Rename has_documents_signed to documents_signed?.
    def has_documents_signed
        ^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:3:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
        if current_admin.aor_completed == false || current_admin.dues_completed == false || current_admin.boat_waiver_completed
    ^^^^
app/helpers/users_helper.rb:3:101: C: Layout/LineLength: Line is too long. [127/100]
        if current_admin.aor_completed == false || current_admin.dues_completed == false || current_admin.boat_waiver_completed
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:4:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
            flash[:error] = "Documents Not Yet Completed: " + (current_admin.dues_completed ? "" : "Dues ") + (current_admin.aor_completed ? "" : "AOR ") + (current_admin.boat_waiver_completed ? "" : "Boat Waiver ")
        ^^^^
app/helpers/users_helper.rb:4:29: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
            flash[:error] = "Documents Not Yet Completed: " + (current_admin.dues_completed ? "" : "Dues ") + (current_admin.aor_completed ? "" : "AOR ") + (current_admin.boat_waiver_completed ? "" : "Boat Waiver ")
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:4:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Documents Not Yet Completed: " + (current_admin.dues_completed ? "" : "Dues ") + (current_admin.aor_completed ? "" : "AOR ") + (current_admin.boat_waiver_completed ? "" : "Boat Waiver ")
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:4:95: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Documents Not Yet Completed: " + (current_admin.dues_completed ? "" : "Dues ") + (current_admin.aor_completed ? "" : "AOR ") + (current_admin.boat_waiver_completed ? "" : "Boat Waiver ")
                                                                                              ^^
app/helpers/users_helper.rb:4:100: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Documents Not Yet Completed: " + (current_admin.dues_completed ? "" : "Dues ") + (current_admin.aor_completed ? "" : "AOR ") + (current_admin.boat_waiver_completed ? "" : "Boat Waiver ")
                                                                                                   ^^^^^^^
app/helpers/users_helper.rb:4:101: C: [Correctable] Layout/LineLength: Line is too long. [215/100]
            flash[:error] = "Documents Not Yet Completed: " + (current_admin.dues_completed ? "" : "Dues ") + (current_admin.aor_completed ? "" : "AOR ") + (current_admin.boat_waiver_completed ? "" : "Boat Waiver ")
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:4:142: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Documents Not Yet Completed: " + (current_admin.dues_completed ? "" : "Dues ") + (current_admin.aor_completed ? "" : "AOR ") + (current_admin.boat_waiver_completed ? "" : "Boat Waiver ")
                                                                                                                                             ^^
app/helpers/users_helper.rb:4:147: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Documents Not Yet Completed: " + (current_admin.dues_completed ? "" : "Dues ") + (current_admin.aor_completed ? "" : "AOR ") + (current_admin.boat_waiver_completed ? "" : "Boat Waiver ")
                                                                                                                                                  ^^^^^^
app/helpers/users_helper.rb:4:196: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Documents Not Yet Completed: " + (current_admin.dues_completed ? "" : "Dues ") + (current_admin.aor_completed ? "" : "AOR ") + (current_admin.boat_waiver_completed ? "" : "Boat Waiver ")
                                                                                                                                                                                                   ^^
app/helpers/users_helper.rb:4:201: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Documents Not Yet Completed: " + (current_admin.dues_completed ? "" : "Dues ") + (current_admin.aor_completed ? "" : "AOR ") + (current_admin.boat_waiver_completed ? "" : "Boat Waiver ")
                                                                                                                                                                                                        ^^^^^^^^^^^^^^
app/helpers/users_helper.rb:5:13: C: [Correctable] Style/RedundantReturn: Redundant return detected.
            return false
            ^^^^^^
app/helpers/users_helper.rb:7:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
            return true
        ^^^^
app/helpers/users_helper.rb:7:13: C: [Correctable] Style/RedundantReturn: Redundant return detected.
            return true
            ^^^^^^
app/helpers/users_helper.rb:11:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def has_info_filled_out(user_id)
^^^^
app/helpers/users_helper.rb:11:9: C: Naming/PredicateName: Rename has_info_filled_out to info_filled_out?.
    def has_info_filled_out(user_id)
        ^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:12:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
        logger.info("user_id: #{user_id}")
    ^^^^
app/helpers/users_helper.rb:13:9: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
        @user_to_check = Admin.find_by(id: user_id)
        ^^^^^^^^^^^^^^
app/helpers/users_helper.rb:14:12: C: [Correctable] Rails/Blank: Use @user_to_check.address.blank? instead of !@user_to_check.address.present?.
        if !@user_to_check.address.present? || !@user_to_check.uin.present?
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:14:13: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
        if !@user_to_check.address.present? || !@user_to_check.uin.present?
            ^^^^^^^^^^^^^^
app/helpers/users_helper.rb:14:48: C: [Correctable] Rails/Blank: Use @user_to_check.uin.blank? instead of !@user_to_check.uin.present?.
        if !@user_to_check.address.present? || !@user_to_check.uin.present?
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:14:49: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
        if !@user_to_check.address.present? || !@user_to_check.uin.present?
                                                ^^^^^^^^^^^^^^
app/helpers/users_helper.rb:15:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
        ^^^^
app/helpers/users_helper.rb:15:29: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:15:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:15:71: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                                                                      ^^^^^^^^^^^^^^
app/helpers/users_helper.rb:15:101: C: [Correctable] Layout/LineLength: Line is too long. [217/100]
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:15:101: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                                                                                                    ^^
app/helpers/users_helper.rb:15:106: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                                                                                                         ^^^^^^
app/helpers/users_helper.rb:15:117: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                                                                                                                    ^^^^^^^^^^^^^^
app/helpers/users_helper.rb:15:151: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                                                                                                                                                      ^^
app/helpers/users_helper.rb:15:156: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                                                                                                                                                           ^^^^^^^^^^
app/helpers/users_helper.rb:15:167: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                                                                                                                                                                      ^
app/helpers/users_helper.rb:15:168: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            flash[:error] = "Info Not Yet Filled Out on Account: " + (@user_to_check.uin.present? ? "" : "UIN ") + (@user_to_check.address.present? ? "" : "Address ")+". Please fill this info out on the Account Page."
                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:17:13: C: [Correctable] Style/RedundantReturn: Redundant return detected.
            return false
            ^^^^^^
app/helpers/users_helper.rb:19:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
            return true
        ^^^^
app/helpers/users_helper.rb:19:13: C: [Correctable] Style/RedundantReturn: Redundant return detected.
            return true
            ^^^^^^
app/helpers/users_helper.rb:23:1: C: [Correctable] Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
app/jobs/application_job.rb:6:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 5).
  # discard_on ActiveJob::DeserializationError
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/application_mailer.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  default from: "from@example.com"
^^
app/mailers/application_mailer.rb:2:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  default from: "from@example.com"
                ^^^^^^^^^^^^^^^^^^
app/mailers/application_mailer.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  layout "mailer"
^^
app/mailers/application_mailer.rb:3:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "mailer"
         ^^^^^^^^
app/models/admin.rb:4:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/admin.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  devise :omniauthable, omniauth_providers: [:google_oauth2]
^^
app/models/admin.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def self.from_google(email:, full_name:, uid:, avatar_url:)
^^
app/models/admin.rb:7:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    if email == 'tamuwakeuser@gmail.com'
  ^^
app/models/admin.rb:8:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      create_with(uid: uid,first_name: full_name.split[0],last_name: full_name.split[1], avatar_url: "",is_approved: true).find_or_create_by!(email: email)
    ^^
app/models/admin.rb:8:27: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
      create_with(uid: uid,first_name: full_name.split[0],last_name: full_name.split[1], avatar_url: "",is_approved: true).find_or_create_by!(email: email)
                          ^
app/models/admin.rb:8:58: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
      create_with(uid: uid,first_name: full_name.split[0],last_name: full_name.split[1], avatar_url: "",is_approved: true).find_or_create_by!(email: email)
                                                         ^
app/models/admin.rb:8:101: C: [Correctable] Layout/LineLength: Line is too long. [155/100]
      create_with(uid: uid,first_name: full_name.split[0],last_name: full_name.split[1], avatar_url: "",is_approved: true).find_or_create_by!(email: email)
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:8:102: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      create_with(uid: uid,first_name: full_name.split[0],last_name: full_name.split[1], avatar_url: "",is_approved: true).find_or_create_by!(email: email)
                                                                                                     ^^
app/models/admin.rb:8:104: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
      create_with(uid: uid,first_name: full_name.split[0],last_name: full_name.split[1], avatar_url: "",is_approved: true).find_or_create_by!(email: email)
                                                                                                       ^
app/models/admin.rb:10:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      return nil unless email =~ /@tamu.edu\z/
    ^^
app/models/admin.rb:10:7: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      return nil unless email =~ /@tamu.edu\z/
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:10:25: C: [Correctable] Performance/RegexpMatch: Use match? instead of =~ when MatchData is not used.
      return nil unless email =~ /@tamu.edu\z/
                        ^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:11:27: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
      create_with(uid: uid,first_name: full_name.split[0],last_name: full_name.split[1], avatar_url: avatar_url).find_or_create_by!(email: email)
                          ^
app/models/admin.rb:11:58: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
      create_with(uid: uid,first_name: full_name.split[0],last_name: full_name.split[1], avatar_url: avatar_url).find_or_create_by!(email: email)
                                                         ^
app/models/admin.rb:11:101: C: [Correctable] Layout/LineLength: Line is too long. [145/100]
      create_with(uid: uid,first_name: full_name.split[0],last_name: full_name.split[1], avatar_url: avatar_url).find_or_create_by!(email: email)
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:15:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  has_many :wakeboard_set, dependent: :destroy
^^
app/models/admin.rb:16:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  has_many :set_roles, dependent: :destroy
^^
app/models/admin.rb:18:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  has_many :roles, :through => :set_roles
^^
app/models/admin.rb:18:20: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  has_many :roles, :through => :set_roles
                   ^^^^^^^^^^^
app/models/admin.rb:21:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def add_role(role_id)
^^
app/models/admin.rb:22:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    user_role = SetRole.new(
  ^^
app/models/admin.rb:23:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
      admin_id: self.id, ...
      ^^^^^^^^^^^^^^^^^^
app/models/admin.rb:23:17: C: [Correctable] Style/RedundantSelf: Redundant self detected.
      admin_id: self.id,
                ^^^^
app/models/admin.rb:25:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 4)
    )
    ^
app/models/admin.rb:27:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if (self.roles.map { |role| role.id }).include?(role_id)
    ^^
app/models/admin.rb:27:9: C: [Correctable] Style/RedundantSelf: Redundant self detected.
    if (self.roles.map { |role| role.id }).include?(role_id)
        ^^^^
app/models/admin.rb:27:24: C: [Correctable] Style/SymbolProc: Pass &:id as an argument to map instead of a block.
    if (self.roles.map { |role| role.id }).include?(role_id)
                       ^^^^^^^^^^^^^^^^^^
app/models/admin.rb:28:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      return false
    ^^
app/models/admin.rb:29:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    end
    ^^^
app/models/admin.rb:32:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    return true
    ^^^^^^
app/models/admin.rb:33:1: C: [Correctable] Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
app/models/admin.rb:36:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    return false
  ^^
app/models/admin.rb:36:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    return false
    ^^^^^^
app/models/admin.rb:38:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/models/application_record.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  primary_abstract_class
^^
app/models/receipt.rb:2:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/role.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    has_many :set_role
^^^^
app/models/role.rb:2:5: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
    has_many :set_role
    ^^^^^^^^
app/models/set_driver.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  belongs_to :admin
^^
app/models/set_driver.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  belongs_to :wakeboard_set
^^
app/models/set_driver.rb:12:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def self.driver_exists?(user, set)
^^
app/models/set_driver.rb:13:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    if !user || !set
  ^^
app/models/set_driver.rb:13:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if !user || !set
    ^^
app/models/set_driver.rb:14:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      return false
    ^^
app/models/set_driver.rb:18:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    return set.length != 0
    ^^^^^^
app/models/set_driver.rb:18:12: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of length != 0.
    return set.length != 0
           ^^^^^^^^^^^^^^^
app/models/set_rider.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  belongs_to :admin
^^
app/models/set_rider.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  belongs_to :wakeboard_set
^^
app/models/set_rider.rb:12:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def self.rider_exists?(user, set)
^^
app/models/set_rider.rb:13:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    if !user || !set
  ^^
app/models/set_rider.rb:13:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if !user || !set
    ^^
app/models/set_rider.rb:14:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      return false
    ^^
app/models/set_rider.rb:18:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    return set.length != 0
    ^^^^^^
app/models/set_rider.rb:18:12: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of length != 0.
    return set.length != 0
           ^^^^^^^^^^^^^^^
app/models/set_role.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  belongs_to :role
^^
app/models/set_role.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  belongs_to :admin
^^
app/models/set_role.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  validates :admin_id, presence: true
^^
app/models/set_role.rb:4:24: C: [Correctable] Rails/RedundantPresenceValidationOnBelongsTo: Remove explicit presence validation for admin_id.
  validates :admin_id, presence: true
                       ^^^^^^^^^^^^^^
app/models/user.rb:1:1: W: Lint/EmptyFile: Empty file detected.
app/models/wakeboard_set.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  has_many :set_rider, dependent: :destroy
^^
app/models/wakeboard_set.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  has_many :set_driver, dependent: :destroy
^^
app/models/wakeboard_set.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  validates :dib_count, presence: true, numericality: { only_integer: true, greater_than_or_equal_to: 0 }
^^
app/models/wakeboard_set.rb:5:101: C: [Correctable] Layout/LineLength: Line is too long. [105/100]
  validates :dib_count, presence: true, numericality: { only_integer: true, greater_than_or_equal_to: 0 }
                                                                                                    ^^^^^
app/models/wakeboard_set.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  validates :chib_count, presence: true, numericality: { only_integer: true, greater_than_or_equal_to: 0 }
^^
app/models/wakeboard_set.rb:6:101: C: [Correctable] Layout/LineLength: Line is too long. [106/100]
  validates :chib_count, presence: true, numericality: { only_integer: true, greater_than_or_equal_to: 0 }
                                                                                                    ^^^^^^
app/models/wakeboard_set.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  validates :driver_count, presence: true, numericality: { only_integer: true, greater_than: 0 }
^^
app/models/wakeboard_set.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  validates :scheduled_date, presence: true, not_in_past: true
^^
app/models/wakeboard_set.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  validate :counts_under_limit
^^
app/models/wakeboard_set.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def counts_under_limit
^^
app/models/wakeboard_set.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    if dib_count > dib_limit
  ^^
app/models/wakeboard_set.rb:14:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if dib_count > dib_limit
    ^^
app/models/wakeboard_set.rb:15:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      errors.add(:dib_count, "exceeds the dib limit")
    ^^
app/models/wakeboard_set.rb:15:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      errors.add(:dib_count, "exceeds the dib limit")
                             ^^^^^^^^^^^^^^^^^^^^^^^
app/models/wakeboard_set.rb:18:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if chib_count > chib_limit
    ^^
app/models/wakeboard_set.rb:19:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      errors.add(:chib_count, "exceeds the chib limit")
    ^^
app/models/wakeboard_set.rb:19:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      errors.add(:chib_count, "exceeds the chib limit")
                              ^^^^^^^^^^^^^^^^^^^^^^^^
app/models/wakeboard_set.rb:22:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if driver_count > driver_limit
    ^^
app/models/wakeboard_set.rb:23:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      errors.add(:driver_count, "exceeds the driver limit")
    ^^
app/models/wakeboard_set.rb:23:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      errors.add(:driver_count, "exceeds the driver limit")
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/wakeboard_set.rb:31:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def rider_can_join?(user_id, as_dib)
^^
app/models/wakeboard_set.rb:32:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    if !user_id || user_id < 1 || as_dib == nil
  ^^
app/models/wakeboard_set.rb:32:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if !user_id || user_id < 1 || as_dib == nil
    ^^
app/models/wakeboard_set.rb:32:42: C: [Correctable] Style/NilComparison: Prefer the use of the nil? predicate.
    if !user_id || user_id < 1 || as_dib == nil
                                         ^^
app/models/wakeboard_set.rb:33:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      return false
    ^^
app/models/wakeboard_set.rb:37:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if (self.scheduled_date < now)
    ^^
app/models/wakeboard_set.rb:37:8: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if (self.scheduled_date < now)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/wakeboard_set.rb:37:9: C: [Correctable] Style/RedundantSelf: Redundant self detected.
    if (self.scheduled_date < now)
        ^^^^
app/models/wakeboard_set.rb:38:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      return false
    ^^
app/models/wakeboard_set.rb:41:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if SetRider.rider_exists?(user_id, self.id)
    ^^
app/models/wakeboard_set.rb:41:40: C: [Correctable] Style/RedundantSelf: Redundant self detected.
    if SetRider.rider_exists?(user_id, self.id)
                                       ^^^^
app/models/wakeboard_set.rb:42:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      return false
    ^^
app/models/wakeboard_set.rb:46:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if self.dib_count >= self.dib_limit
    ^^
app/models/wakeboard_set.rb:46:7: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if self.dib_count >= self.dib_limit
      ^^
app/models/wakeboard_set.rb:46:10: C: [Correctable] Style/RedundantSelf: Redundant self detected.
      if self.dib_count >= self.dib_limit
         ^^^^
app/models/wakeboard_set.rb:46:28: C: [Correctable] Style/RedundantSelf: Redundant self detected.
      if self.dib_count >= self.dib_limit
                           ^^^^
app/models/wakeboard_set.rb:47:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        return false
      ^^
app/models/wakeboard_set.rb:50:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      if self.chib_count >= self.chib_limit
    ^^
app/models/wakeboard_set.rb:50:7: C: [Correctable] Style/IfInsideElse: Convert if nested inside else to elsif.
      if self.chib_count >= self.chib_limit
      ^^
app/models/wakeboard_set.rb:50:7: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if self.chib_count >= self.chib_limit
      ^^
app/models/wakeboard_set.rb:50:10: C: [Correctable] Style/RedundantSelf: Redundant self detected.
      if self.chib_count >= self.chib_limit
         ^^^^
app/models/wakeboard_set.rb:50:29: C: [Correctable] Style/RedundantSelf: Redundant self detected.
      if self.chib_count >= self.chib_limit
                            ^^^^
app/models/wakeboard_set.rb:51:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        return false
      ^^
app/models/wakeboard_set.rb:55:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    return true
    ^^^^^^
app/models/wakeboard_set.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def join(user_id, as_dib)
^^
app/models/wakeboard_set.rb:63:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    if !rider_can_join?(user_id, as_dib) || (!user_id || as_dib == nil)
  ^^
app/models/wakeboard_set.rb:63:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if !rider_can_join?(user_id, as_dib) || (!user_id || as_dib == nil)
    ^^
app/models/wakeboard_set.rb:63:65: C: [Correctable] Style/NilComparison: Prefer the use of the nil? predicate.
    if !rider_can_join?(user_id, as_dib) || (!user_id || as_dib == nil)
                                                                ^^
app/models/wakeboard_set.rb:64:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      return false
    ^^
app/models/wakeboard_set.rb:68:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
      date_registered: DateTime.current, ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/wakeboard_set.rb:69:25: C: [Correctable] Style/RedundantSelf: Redundant self detected.
      wakeboard_set_id: self.id,
                        ^^^^
app/models/wakeboard_set.rb:72:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 4)
    )
    ^
app/models/wakeboard_set.rb:75:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      self.dib_count += 1
    ^^
app/models/wakeboard_set.rb:77:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      self.chib_count += 1
    ^^
app/models/wakeboard_set.rb:80:5: C: [Correctable] Style/RedundantSelf: Redundant self detected.
    self.transaction do
    ^^^^
app/models/wakeboard_set.rb:81:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      self.save!
    ^^
app/models/wakeboard_set.rb:81:7: C: [Correctable] Style/RedundantSelf: Redundant self detected.
      self.save!
      ^^^^
app/models/wakeboard_set.rb:85:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    return true
    ^^^^^^
app/models/wakeboard_set.rb:87:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    return false
  ^^
app/models/wakeboard_set.rb:87:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    return false
    ^^^^^^
app/models/wakeboard_set.rb:92:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  def leave(user_id)
^^
app/models/wakeboard_set.rb:93:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    rider = SetRider.find_by(admin_id: user_id, wakeboard_set_id: self.id)
  ^^
app/models/wakeboard_set.rb:93:67: C: [Correctable] Style/RedundantSelf: Redundant self detected.
    rider = SetRider.find_by(admin_id: user_id, wakeboard_set_id: self.id)
                                                                  ^^^^
app/models/wakeboard_set.rb:94:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/wakeboard_set.rb:96:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if !rider || DateTime.current > self.scheduled_date
    ^^
app/models/wakeboard_set.rb:96:37: C: [Correctable] Style/RedundantSelf: Redundant self detected.
    if !rider || DateTime.current > self.scheduled_date
                                    ^^^^
app/models/wakeboard_set.rb:97:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      return false
    ^^
app/models/wakeboard_set.rb:101:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      self.dib_count -= 1
    ^^
app/models/wakeboard_set.rb:103:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      self.chib_count -= 1
    ^^
app/models/wakeboard_set.rb:106:5: C: [Correctable] Style/RedundantSelf: Redundant self detected.
    self.transaction do
    ^^^^
app/models/wakeboard_set.rb:107:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      rider.destroy!
    ^^
app/models/wakeboard_set.rb:108:7: C: [Correctable] Style/RedundantSelf: Redundant self detected.
      self.save!
      ^^^^
app/models/wakeboard_set.rb:112:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    return true
    ^^^^^^
app/models/wakeboard_set.rb:113:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/wakeboard_set.rb:115:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    return false
  ^^
app/models/wakeboard_set.rb:115:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    return false
    ^^^^^^
app/validators/not_in_past_validator.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    def validate_each(record, attribute, value)
^^^^
app/validators/not_in_past_validator.rb:3:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
        if value.present? && value < DateTime.current
    ^^^^
app/validators/not_in_past_validator.rb:4:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
            record.errors.add attribute, "cannot be in the past"
        ^^^^
app/validators/not_in_past_validator.rb:4:13: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
            record.errors.add attribute, "cannot be in the past"
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/validators/not_in_past_validator.rb:4:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            record.errors.add attribute, "cannot be in the past"
                                         ^^^^^^^^^^^^^^^^^^^^^^^
app/validators/not_in_past_validator.rb:7:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
app/views/admins/show.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.partial! "users/user", user: @user
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/admins/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "users/user", user: @user
              ^^^^^^^^^^^^
app/views/receipts/_receipt.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.extract! receipt, :id, :user_id, :value, :date_made, :date_approved, :date_refunded, :stage, :image_link, :created_at, :updated_at
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/receipts/_receipt.json.jbuilder:1:101: C: [Correctable] Layout/LineLength: Line is too long. [135/100]
json.extract! receipt, :id, :user_id, :value, :date_made, :date_approved, :date_refunded, :stage, :image_link, :created_at, :updated_at
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/receipts/_receipt.json.jbuilder:2:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.url receipt_url(receipt, format: :json)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/receipts/index.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.array! @receipts, partial: "receipts/receipt", as: :receipt
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/receipts/index.json.jbuilder:1:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @receipts, partial: "receipts/receipt", as: :receipt
                                ^^^^^^^^^^^^^^^^^^
app/views/receipts/show.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.partial! "receipts/receipt", receipt: @receipt
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/receipts/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "receipts/receipt", receipt: @receipt
              ^^^^^^^^^^^^^^^^^^
app/views/users/_user.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.extract! admin, :id, :email, :first_name, :last_name, :password,:documents_signed, :created_at, :updated_at
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/_user.json.jbuilder:1:69: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
json.extract! admin, :id, :email, :first_name, :last_name, :password,:documents_signed, :created_at, :updated_at
                                                                    ^
app/views/users/_user.json.jbuilder:1:101: C: [Correctable] Layout/LineLength: Line is too long. [112/100]
json.extract! admin, :id, :email, :first_name, :last_name, :password,:documents_signed, :created_at, :updated_at
                                                                                                    ^^^^^^^^^^^^
app/views/users/_user.json.jbuilder:2:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.url user_url(admin, format: :json)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/index.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.array! @users, partial: "users/user", as: :user
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/index.json.jbuilder:1:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @users, partial: "users/user", as: :user
                             ^^^^^^^^^^^^
app/views/users/show.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.partial! "users/user", user: @user
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "users/user", user: @user
              ^^^^^^^^^^^^
app/views/wakeboard_sets/_wakeboard_set.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.extract! wakeboard_set, :id, :rider_limit, :current_rider_count, :scheduled_date, :created_at, :updated_at
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/wakeboard_sets/_wakeboard_set.json.jbuilder:1:101: C: [Correctable] Layout/LineLength: Line is too long. [111/100]
json.extract! wakeboard_set, :id, :rider_limit, :current_rider_count, :scheduled_date, :created_at, :updated_at
                                                                                                    ^^^^^^^^^^^
app/views/wakeboard_sets/_wakeboard_set.json.jbuilder:2:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.url wakeboard_set_url(wakeboard_set, format: :json)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/wakeboard_sets/index.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.array! @wakeboard_sets, partial: "wakeboard_sets/wakeboard_set", as: :wakeboard_set
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/wakeboard_sets/index.json.jbuilder:1:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @wakeboard_sets, partial: "wakeboard_sets/wakeboard_set", as: :wakeboard_set
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/wakeboard_sets/show.json.jbuilder:1:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
json.partial! "wakeboard_sets/wakeboard_set", wakeboard_set: @wakeboard_set
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/wakeboard_sets/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "wakeboard_sets/wakeboard_set", wakeboard_set: @wakeboard_set
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config.ru:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/environment"
                 ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:2:3: C: [Correctable] Layout/FirstArrayElementIndentation: Use 5 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
  {role_name: "Driver"},
  ^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:2:3: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {role_name: "Driver"},
  ^
db/seeds.rb:2:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  {role_name: "Driver"},
              ^^^^^^^^
db/seeds.rb:2:23: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {role_name: "Driver"},
                      ^
db/seeds.rb:3:3: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {role_name: "Treasurer"},
  ^
db/seeds.rb:3:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  {role_name: "Treasurer"},
              ^^^^^^^^^^^
db/seeds.rb:3:26: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {role_name: "Treasurer"},
                         ^
db/seeds.rb:4:3: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {role_name: "Admin"}
  ^
db/seeds.rb:4:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  {role_name: "Admin"}
              ^^^^^^^
db/seeds.rb:4:22: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {role_name: "Admin"}
                     ^
db/seeds.rb:5:2: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
])
 ^
db/seeds.rb:7:5: C: [Correctable] Layout/FirstArrayElementIndentation: Use 5 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
    {email: "tamuwakeuser@gmail.com", first_name: "Admin",last_name: "User", uid: 123, avatar_url: "https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg", is_approved: true}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:7:5: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    {email: "tamuwakeuser@gmail.com", first_name: "Admin",last_name: "User", uid: 123, avatar_url: "https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg", is_approved: true}
    ^
db/seeds.rb:7:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    {email: "tamuwakeuser@gmail.com", first_name: "Admin",last_name: "User", uid: 123, avatar_url: "https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg", is_approved: true}
            ^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:7:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    {email: "tamuwakeuser@gmail.com", first_name: "Admin",last_name: "User", uid: 123, avatar_url: "https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg", is_approved: true}
                                                  ^^^^^^^
db/seeds.rb:7:58: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    {email: "tamuwakeuser@gmail.com", first_name: "Admin",last_name: "User", uid: 123, avatar_url: "https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg", is_approved: true}
                                                         ^
db/seeds.rb:7:70: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    {email: "tamuwakeuser@gmail.com", first_name: "Admin",last_name: "User", uid: 123, avatar_url: "https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg", is_approved: true}
                                                                     ^^^^^^
db/seeds.rb:7:100: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    {email: "tamuwakeuser@gmail.com", first_name: "Admin",last_name: "User", uid: 123, avatar_url: "https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg", is_approved: true}
                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:7:101: C: [Correctable] Layout/LineLength: Line is too long. [260/100]
    {email: "tamuwakeuser@gmail.com", first_name: "Admin",last_name: "User", uid: 123, avatar_url: "https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg", is_approved: true}
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:7:260: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    {email: "tamuwakeuser@gmail.com", first_name: "Admin",last_name: "User", uid: 123, avatar_url: "https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg", is_approved: true}
                                                                                                                                                                                                                                                                   ^
db/seeds.rb:8:2: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
])
 ^
db/seeds.rb:11:5: C: [Correctable] Layout/FirstArrayElementIndentation: Use 5 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
    { ...
    ^
db/seeds.rb:12:9: C: [Correctable] Layout/FirstHashElementIndentation: Use 5 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
        driver_count: 1,
        ^^^^^^^^^^^^^^^
db/seeds.rb:16:9: C: [Correctable] Layout/FirstHashElementIndentation: Use 5 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
        driver_count: 2,
        ^^^^^^^^^^^^^^^
db/seeds.rb:20:9: C: [Correctable] Layout/FirstHashElementIndentation: Use 5 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
        driver_count: 1,
        ^^^^^^^^^^^^^^^
db/seeds.rb:23:2: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
])
 ^
db/seeds.rb:24:1: C: [Correctable] Layout/TrailingEmptyLines: 2 trailing blank lines detected.
spec/helpers/roles_helper_spec.rb:13:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe RolesHelper, type: :helper do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/roles_helper_spec.rb:13:29: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe RolesHelper, type: :helper do
                            ^^^^^^^^^^^^^
spec/helpers/roles_helper_spec.rb:14:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  pending "add some examples to (or delete) #{__FILE__}"
^^
spec/helpers/set_roles_helper_spec.rb:13:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe SetRolesHelper, type: :helper do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/set_roles_helper_spec.rb:13:32: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe SetRolesHelper, type: :helper do
                               ^^^^^^^^^^^^^
spec/helpers/set_roles_helper_spec.rb:14:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  pending "add some examples to (or delete) #{__FILE__}"
^^
spec/integration/account_integration_spec.rb:4:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Using Account Page and Tools', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/integration/account_integration_spec.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true, role_id: -2)}
^^
spec/integration/account_integration_spec.rb:6:16: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true, role_id: -2)}
               ^
spec/integration/account_integration_spec.rb:6:22: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true, role_id: -2)}
                     ^^^^^^
spec/integration/account_integration_spec.rb:6:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true, role_id: -2)}
                                   ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:6:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true, role_id: -2)}
                                                                       ^^^^^^^
spec/integration/account_integration_spec.rb:6:92: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true, role_id: -2)}
                                                                                           ^^^^^^
spec/integration/account_integration_spec.rb:6:98: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true, role_id: -2)}
                                                                                                 ^
spec/integration/account_integration_spec.rb:6:130: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true, role_id: -2)}
                                                                                                                                 ^
spec/integration/account_integration_spec.rb:8:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before :each do
  ^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:9:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
  ^^
spec/integration/account_integration_spec.rb:9:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:9:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:10:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:10:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:13:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'visiting account page' do
  ^^^^^^^^
spec/integration/account_integration_spec.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit accounts_path
  ^^
spec/integration/account_integration_spec.rb:15:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('chrispasala@tamu.edu')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:18:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'visiting account page and editing user info' do
  ^^^^^^^^
spec/integration/account_integration_spec.rb:19:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit edit_admin_path(admin.id)
  ^^
spec/integration/account_integration_spec.rb:20:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "admin[first_name]", with: "new_name"
            ^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:20:40: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "admin[first_name]", with: "new_name"
                                       ^^^^^^^^^^
spec/integration/account_integration_spec.rb:22:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('new_name')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:26:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'visiting any page without being approved' do
  ^^^^^^^^
spec/integration/account_integration_spec.rb:27:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    admin.is_approved = false
  ^^
spec/integration/account_integration_spec.rb:29:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('not yet approved')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:32:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'visiting account page without being approved' do
  ^^^^^^^^
spec/integration/account_integration_spec.rb:33:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    admin.is_approved = false
  ^^
spec/integration/account_integration_spec.rb:35:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).not_to have_content('not yet approved')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:37:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/integration/account_integration_spec.rb:38:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/integration/integration_spec.rb:6:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe 'Account Pages', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:6:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Account Pages', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
^^
spec/integration/integration_spec.rb:7:16: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
               ^
spec/integration/integration_spec.rb:7:22: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                     ^^^^^^
spec/integration/integration_spec.rb:7:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                                   ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:7:59: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                                                          ^
spec/integration/integration_spec.rb:8:15: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 1)}
              ^
spec/integration/integration_spec.rb:8:20: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 1)}
                   ^^^^^^
spec/integration/integration_spec.rb:8:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 1)}
                                 ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:8:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 1)}
                                                                    ^^^^^^^
spec/integration/integration_spec.rb:8:88: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 1)}
                                                                                       ^^^^^^
spec/integration/integration_spec.rb:8:94: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 1)}
                                                                                             ^
spec/integration/integration_spec.rb:8:106: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 1)}
                                                                                                         ^
spec/integration/integration_spec.rb:10:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before :each do
  ^^^^^^^^^^^^
spec/integration/integration_spec.rb:11:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
  ^^
spec/integration/integration_spec.rb:11:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:11:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:12:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:12:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:13:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(user)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:13:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(user)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:16:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'visiting account page ' do
  ^^^^^^^^
spec/integration/integration_spec.rb:16:13: C: [Correctable] RSpec/ExcessiveDocstringSpacing: Excessive whitespace.
  scenario 'visiting account page ' do
            ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:17:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit accounts_path
  ^^
spec/integration/integration_spec.rb:18:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Email:')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:22:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Member Pages Without Access', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:23:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/integration/integration_spec.rb:24:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
^^
spec/integration/integration_spec.rb:24:16: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
               ^
spec/integration/integration_spec.rb:24:22: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                     ^^^^^^
spec/integration/integration_spec.rb:24:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                                   ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:24:59: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                                                          ^
spec/integration/integration_spec.rb:25:15: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: -2)}
              ^
spec/integration/integration_spec.rb:25:20: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: -2)}
                   ^^^^^^
spec/integration/integration_spec.rb:25:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: -2)}
                                 ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:25:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: -2)}
                                                                    ^^^^^^^
spec/integration/integration_spec.rb:25:88: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: -2)}
                                                                                       ^^^^^^
spec/integration/integration_spec.rb:25:94: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: -2)}
                                                                                             ^
spec/integration/integration_spec.rb:25:107: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: -2)}
                                                                                                          ^
spec/integration/integration_spec.rb:26:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/integration/integration_spec.rb:27:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before :each do
  ^^^^^^^^^^^^
spec/integration/integration_spec.rb:28:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
  ^^
spec/integration/integration_spec.rb:28:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:28:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:29:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:29:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:32:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'visiting member page without sufficient permissions' do
  ^^^^^^^^
spec/integration/integration_spec.rb:33:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit users_path
  ^^
spec/integration/integration_spec.rb:34:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('You do not have access')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:38:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Member Pages With Access', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:39:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/integration/integration_spec.rb:40:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
^^
spec/integration/integration_spec.rb:40:16: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
               ^
spec/integration/integration_spec.rb:40:22: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                     ^^^^^^
spec/integration/integration_spec.rb:40:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                                   ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:40:59: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                                                          ^
spec/integration/integration_spec.rb:41:15: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
              ^
spec/integration/integration_spec.rb:41:20: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                   ^^^^^^
spec/integration/integration_spec.rb:41:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                                 ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:41:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                                                                    ^^^^^^^
spec/integration/integration_spec.rb:41:88: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                                                                                       ^^^^^^
spec/integration/integration_spec.rb:41:94: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                                                                                             ^
spec/integration/integration_spec.rb:41:106: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                                                                                                         ^
spec/integration/integration_spec.rb:43:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before :each do
  ^^^^^^^^^^^^
spec/integration/integration_spec.rb:44:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
  ^^
spec/integration/integration_spec.rb:44:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:44:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:45:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:45:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:48:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'visiting member page with sufficient permissions' do
  ^^^^^^^^
spec/integration/integration_spec.rb:49:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit users_path
  ^^
spec/integration/integration_spec.rb:50:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Users')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/integration_spec.rb:52:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/integration/integration_spec.rb:53:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/integration/members_integration_spec.rb:4:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe 'Member Pages Without Access', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:4:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Member Pages Without Access', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/integration/members_integration_spec.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: -2)}
^^
spec/integration/members_integration_spec.rb:6:3: C: [Correctable] RSpec/EmptyLineAfterFinalLet: Add an empty line after the last let.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: -2)}
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:6:16: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: -2)}
               ^
spec/integration/members_integration_spec.rb:6:22: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: -2)}
                     ^^^^^^
spec/integration/members_integration_spec.rb:6:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: -2)}
                                   ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:6:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: -2)}
                                                                       ^^^^^^^
spec/integration/members_integration_spec.rb:6:92: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: -2)}
                                                                                           ^^^^^^
spec/integration/members_integration_spec.rb:6:98: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: -2)}
                                                                                                 ^
spec/integration/members_integration_spec.rb:6:116: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: -2)}
                                                                                                                   ^
spec/integration/members_integration_spec.rb:6:129: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:admin) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: -2)}
                                                                                                                                ^
spec/integration/members_integration_spec.rb:7:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before :each do
  ^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:8:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
  ^^
spec/integration/members_integration_spec.rb:8:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:8:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:9:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:9:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:12:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'visiting member page without sufficient permissions' do
  ^^^^^^^^
spec/integration/members_integration_spec.rb:13:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit users_path
  ^^
spec/integration/members_integration_spec.rb:14:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('You do not have access')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:18:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Member Pages With Access', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:19:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/integration/members_integration_spec.rb:20:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 0) spaces for indentation.
let(:chris) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: 3, is_approved: true)}

spec/integration/members_integration_spec.rb:20:14: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
let(:chris) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: 3, is_approved: true)}
             ^
spec/integration/members_integration_spec.rb:20:20: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
let(:chris) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: 3, is_approved: true)}
                   ^^^^^^
spec/integration/members_integration_spec.rb:20:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
let(:chris) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: 3, is_approved: true)}
                                 ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:20:70: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
let(:chris) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: 3, is_approved: true)}
                                                                     ^^^^^^^
spec/integration/members_integration_spec.rb:20:90: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
let(:chris) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: 3, is_approved: true)}
                                                                                         ^^^^^^
spec/integration/members_integration_spec.rb:20:96: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
let(:chris) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: 3, is_approved: true)}
                                                                                               ^
spec/integration/members_integration_spec.rb:20:114: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
let(:chris) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: 3, is_approved: true)}
                                                                                                                 ^
spec/integration/members_integration_spec.rb:20:127: W: Lint/DuplicateHashKey: Duplicated key in hash literal.
let(:chris) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: 3, is_approved: true)}
                                                                                                                              ^^^^^^^^^^^
spec/integration/members_integration_spec.rb:20:145: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
let(:chris) {Admin.create(email: "chrispasala@tamu.edu", first_name: "first", last_name: "last",is_approved: true,role_id: 3, is_approved: true)}
                                                                                                                                                ^
spec/integration/members_integration_spec.rb:22:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  before :each do ...
  ^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:22:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before :each do
  ^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:23:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
  ^^
spec/integration/members_integration_spec.rb:23:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:23:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:24:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(chris)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:24:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(chris)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:27:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  it 'visiting member page with sufficient permissions' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:28:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
      visit users_path
  ^^^^
spec/integration/members_integration_spec.rb:29:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(page).to have_content('chris')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:32:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  it 'visiting member approval page with sufficient permissions' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:33:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
  ^^^^
spec/integration/members_integration_spec.rb:33:7: W: Lint/UselessAssignment: Useless assignment to variable - test.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
      ^^^^
spec/integration/members_integration_spec.rb:33:20: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                   ^^^^^^
spec/integration/members_integration_spec.rb:33:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:33:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                                                       ^^^^^^
spec/integration/members_integration_spec.rb:33:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                                                                          ^^^^^^
spec/integration/members_integration_spec.rb:33:97: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                                                                                ^
spec/integration/members_integration_spec.rb:35:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(page).to have_content("realemailreal@tamu.edu")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:35:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_content("realemailreal@tamu.edu")
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:39:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  it 'approving member page with sufficient permissions' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:40:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
  ^^^^
spec/integration/members_integration_spec.rb:40:7: W: Lint/UselessAssignment: Useless assignment to variable - test.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
      ^^^^
spec/integration/members_integration_spec.rb:40:20: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                   ^^^^^^
spec/integration/members_integration_spec.rb:40:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:40:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                                                       ^^^^^^
spec/integration/members_integration_spec.rb:40:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                                                                          ^^^^^^
spec/integration/members_integration_spec.rb:40:97: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
      test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                                                                                ^
spec/integration/members_integration_spec.rb:42:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on("Approve User")
               ^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:44:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(page).to have_content("realemailreal@tamu.edu")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:44:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_content("realemailreal@tamu.edu")
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:47:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  it 'denying member page with sufficient permissions' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:48:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 4) spaces for indentation.
    test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
^^^^
spec/integration/members_integration_spec.rb:48:5: W: Lint/UselessAssignment: Useless assignment to variable - test.
    test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
    ^^^^
spec/integration/members_integration_spec.rb:48:18: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked. Or check persisted? on model returned from create.
    test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                 ^^^^^^
spec/integration/members_integration_spec.rb:48:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                               ^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:48:70: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                                                     ^^^^^^
spec/integration/members_integration_spec.rb:48:89: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                                                                        ^^^^^^
spec/integration/members_integration_spec.rb:48:95: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    test = Admin.create(email: "realemailreal@tamu.edu", first_name: "test", last_name: "test",role_id: 0, is_approved: false)
                                                                                              ^
spec/integration/members_integration_spec.rb:50:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on("Deny User")
             ^^^^^^^^^^^
spec/integration/members_integration_spec.rb:52:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to not_have_content("realemailreal@tamu.edu")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:52:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to not_have_content("realemailreal@tamu.edu")
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:53:1: C: [Correctable] Layout/BlockAlignment: end at 53, 0 is not aligned with it 'denying member page with sufficient permissions' do at 47, 2.
end
^^^
spec/integration/members_integration_spec.rb:54:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/integration/members_integration_spec.rb:55:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/integration/members_integration_spec.rb:56:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/integration/members_integration_spec.rb:57:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/integration/receipt_integration_spec.rb:4:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Creating a receipt', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
  ^^
spec/integration/receipt_integration_spec.rb:5:18: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
    let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                 ^
spec/integration/receipt_integration_spec.rb:5:24: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
    let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                       ^^^^^^
spec/integration/receipt_integration_spec.rb:5:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:5:61: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
    let(:admin) {Admin.create(email: "chrispasala@tamu.edu")}
                                                            ^
spec/integration/receipt_integration_spec.rb:6:17: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
    let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                ^
spec/integration/receipt_integration_spec.rb:6:22: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
    let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                     ^^^^^^
spec/integration/receipt_integration_spec.rb:6:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                                   ^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:6:71: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                                                                      ^^^^^^^
spec/integration/receipt_integration_spec.rb:6:90: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                                                                                         ^^^^^^
spec/integration/receipt_integration_spec.rb:6:96: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                                                                                               ^
spec/integration/receipt_integration_spec.rb:6:108: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
    let(:user) {User.create(email: "chrispasala@tamu.edu", firstname: "first", lastname: "last",role_id: 3)}
                                                                                                           ^
spec/integration/receipt_integration_spec.rb:7:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/integration/receipt_integration_spec.rb:8:5: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
    before :each do
    ^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:9:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^
spec/integration/receipt_integration_spec.rb:9:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:9:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:10:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:10:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:11:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(user)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:11:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(user)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:13:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/integration/receipt_integration_spec.rb:14:5: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
    scenario 'valid inputs' do
    ^^^^^^^^
spec/integration/receipt_integration_spec.rb:15:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      visit new_receipt_path
    ^^
spec/integration/receipt_integration_spec.rb:16:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fill_in "receipt[value]", with: 123
              ^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:19:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(page).to have_content('Receipt ID')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:21:3: C: [Correctable] Layout/BlockAlignment: end at 21, 2 is not aligned with RSpec.describe 'Creating a receipt', type: :feature do at 4, 0.
  end
  ^^^
spec/integration/receipt_integration_spec.rb:22:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/integration/set_integration_spec.rb:3:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe 'Creating a set', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Creating a set', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  let(:admin) { Admin.find_or_create_by(email: "aramone@tamu.edu") }
^^
spec/integration/set_integration_spec.rb:4:23: C: [Correctable] Rails/SaveBang: Use find_or_create_by! instead of find_or_create_by if the return value is not checked.
  let(:admin) { Admin.find_or_create_by(email: "aramone@tamu.edu") }
                      ^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:4:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:admin) { Admin.find_or_create_by(email: "aramone@tamu.edu") }
                                               ^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:7:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before :each do
  ^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:8:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
  ^^
spec/integration/set_integration_spec.rb:8:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:8:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:authenticate_admin!).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:9:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:9:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:current_admin).and_return(admin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:10:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(user)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:10:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(user)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:13:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario "Driver creating a valid set" do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:13:3: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
  scenario "Driver creating a valid set" do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:13:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "Driver creating a valid set" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    date = DateTime.current.tomorrow
  ^^
spec/integration/set_integration_spec.rb:18:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).not_to have_content('Error')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:20:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content(@admin.fullname.split()[0])
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:20:34: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(page).to have_content(@admin.fullname.split()[0])
                                 ^^^^^^
spec/integration/set_integration_spec.rb:20:55: C: [Correctable] Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    expect(page).to have_content(@admin.fullname.split()[0])
                                                      ^^
spec/integration/set_integration_spec.rb:21:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('table')).to have_content(date)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:24:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario "Driver creating set with date in the past" do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:24:3: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
  scenario "Driver creating set with date in the past" do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:24:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "Driver creating set with date in the past" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:25:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    date = DateTime.current.tomorrow
  ^^
spec/integration/set_integration_spec.rb:29:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).not_to have_content('Error')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:31:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('table')).to have_content(@admin.fullname.split()[0])
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:31:43: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('table')).to have_content(@admin.fullname.split()[0])
                                          ^^^^^^
spec/integration/set_integration_spec.rb:31:64: C: [Correctable] Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    expect(find('table')).to have_content(@admin.fullname.split()[0])
                                                               ^^
spec/integration/set_integration_spec.rb:32:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('table')).to have_content(date)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:35:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario "Rider viewing create button on sets page" do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:35:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "Rider viewing create button on sets page" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:36:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    sign_out @admin
  ^^
spec/integration/set_integration_spec.rb:36:14: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    sign_out @admin
             ^^^^^^
spec/integration/set_integration_spec.rb:37:7: C: [Correctable] Style/CommentAnnotation: Annotation keywords like TODO should be all upper case, followed by a colon, and a space, then a note describing the problem.
    # TODO sign in as a default user
      ^^^^^
spec/integration/set_integration_spec.rb:39:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Sets this Week')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:42:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario "Rider creating set" do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:42:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "Rider creating set" do
           ^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:43:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    date = DateTime.current.tomorrow
  ^^
spec/integration/set_integration_spec.rb:44:14: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    sign_out @admin
             ^^^^^^
spec/integration/set_integration_spec.rb:48:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('Error')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:52:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Joining a set', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:53:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before :each do
^^
spec/integration/set_integration_spec.rb:53:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before :each do
  ^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:54:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @set = WakeboardSet.find_or_create_by(
  ^^
spec/integration/set_integration_spec.rb:54:25: C: [Correctable] Rails/SaveBang: Use find_or_create_by! instead of find_or_create_by if the return value is not checked.
    @set = WakeboardSet.find_or_create_by(
                        ^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:55:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
      dib_count: 0, ...
      ^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:59:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 4)
    )
    ^
spec/integration/set_integration_spec.rb:62:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Rider joining as a dib' do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:62:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  scenario 'Rider joining as a dib' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:63:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_path(@set.id)
  ^^
spec/integration/set_integration_spec.rb:63:30: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    visit wakeboard_set_path(@set.id)
                             ^^^^
spec/integration/set_integration_spec.rb:64:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:64:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:64:53: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
                                                    ^^^^^^
spec/integration/set_integration_spec.rb:66:30: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    visit wakeboard_set_path(@set.id)
                             ^^^^
spec/integration/set_integration_spec.rb:67:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:67:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:67:49: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).to have_content(@admin.full_name)
                                                ^^^^^^
spec/integration/set_integration_spec.rb:70:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Rider joining as a chib' do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:70:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  scenario 'Rider joining as a chib' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:71:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_path(@set.id)
  ^^
spec/integration/set_integration_spec.rb:71:30: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    visit wakeboard_set_path(@set.id)
                             ^^^^
spec/integration/set_integration_spec.rb:72:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:72:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:72:53: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
                                                    ^^^^^^
spec/integration/set_integration_spec.rb:74:30: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    visit wakeboard_set_path(@set.id)
                             ^^^^
spec/integration/set_integration_spec.rb:75:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:75:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:75:49: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).to have_content(@admin.full_name)
                                                ^^^^^^
spec/integration/set_integration_spec.rb:78:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Rider who is already joined as a dib trys to join as dib again' do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:78:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  scenario 'Rider who is already joined as a dib trys to join as dib again' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:79:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_path(1)
  ^^
spec/integration/set_integration_spec.rb:80:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#dib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:80:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#dib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:80:48: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#dib-table')).to have_content(@admin.full_name)
                                               ^^^^^^
spec/integration/set_integration_spec.rb:83:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#dib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:83:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#dib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:83:48: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#dib-table')).to have_content(@admin.full_name)
                                               ^^^^^^
spec/integration/set_integration_spec.rb:86:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Rider who is already joined as a dib trys to join as chib' do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:86:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  scenario 'Rider who is already joined as a dib trys to join as chib' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:87:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_path(1)
  ^^
spec/integration/set_integration_spec.rb:88:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#dib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:88:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#dib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:88:48: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#dib-table')).to have_content(@admin.full_name)
                                               ^^^^^^
spec/integration/set_integration_spec.rb:91:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:91:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:91:53: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
                                                    ^^^^^^
spec/integration/set_integration_spec.rb:94:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Rider who is already joined as a chib trys to join as chib again' do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:94:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  scenario 'Rider who is already joined as a chib trys to join as chib again' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:95:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_path(1)
  ^^
spec/integration/set_integration_spec.rb:96:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:96:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:96:49: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).to have_content(@admin.full_name)
                                                ^^^^^^
spec/integration/set_integration_spec.rb:99:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:99:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:99:49: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).to have_content(@admin.full_name)
                                                ^^^^^^
spec/integration/set_integration_spec.rb:102:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Rider who is already joined as a chib trys to join as dib' do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:102:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  scenario 'Rider who is already joined as a chib trys to join as dib' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:103:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_path(1)
  ^^
spec/integration/set_integration_spec.rb:104:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:104:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:104:49: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).to have_content(@admin.full_name)
                                                ^^^^^^
spec/integration/set_integration_spec.rb:107:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:107:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:107:52: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
                                                   ^^^^^^
spec/integration/set_integration_spec.rb:111:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Leaving a set', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:112:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before :each do
^^
spec/integration/set_integration_spec.rb:112:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before :each do
  ^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:113:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @admin = Admin.where(role_id: 1).limit(1)[0]
  ^^
spec/integration/set_integration_spec.rb:114:13: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    sign_in @admin
            ^^^^^^
spec/integration/set_integration_spec.rb:117:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Dib rider leaving' do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:117:3: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
  scenario 'Dib rider leaving' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:118:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_path(1)
  ^^
spec/integration/set_integration_spec.rb:119:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#dib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:119:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#dib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:119:48: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#dib-table')).to have_content(@admin.full_name)
                                               ^^^^^^
spec/integration/set_integration_spec.rb:122:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:122:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:122:52: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
                                                   ^^^^^^
spec/integration/set_integration_spec.rb:123:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:123:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:123:53: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
                                                    ^^^^^^
spec/integration/set_integration_spec.rb:126:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Chib rider leaving' do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:126:3: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
  scenario 'Chib rider leaving' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:127:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_path(1)
  ^^
spec/integration/set_integration_spec.rb:128:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:128:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:128:49: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).to have_content(@admin.full_name)
                                                ^^^^^^
spec/integration/set_integration_spec.rb:131:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:131:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:131:52: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
                                                   ^^^^^^
spec/integration/set_integration_spec.rb:132:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:132:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:132:53: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
                                                    ^^^^^^
spec/integration/set_integration_spec.rb:135:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Dib and Chib rider leaving' do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:135:3: C: RSpec/MultipleExpectations: Example has too many expectations [4/1].
  scenario 'Dib and Chib rider leaving' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:136:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_path(1)
  ^^
spec/integration/set_integration_spec.rb:137:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:137:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:137:49: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).to have_content(@admin.full_name)
                                                ^^^^^^
spec/integration/set_integration_spec.rb:138:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#dib-table')).to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:138:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#dib-table')).to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:138:48: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#dib-table')).to have_content(@admin.full_name)
                                               ^^^^^^
spec/integration/set_integration_spec.rb:141:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:141:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:141:52: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#dib-table')).not_to have_content(@admin.full_name)
                                                   ^^^^^^
spec/integration/set_integration_spec.rb:142:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:142:12: C: [Correctable] Capybara/SpecificFinders: Prefer find_by over find.
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
           ^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:142:53: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(find('#chib-table')).not_to have_content(@admin.full_name)
                                                    ^^^^^^
spec/integration/set_integration_spec.rb:145:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'Rider who isn\'t on set leaving' do
  ^^^^^^^^
spec/integration/set_integration_spec.rb:145:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  scenario 'Rider who isn\'t on set leaving' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:146:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_path(1)
  ^^
spec/integration/set_integration_spec.rb:147:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).not_to have_content(@admin.full_name)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:147:38: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
    expect(page).not_to have_content(@admin.full_name)
                                     ^^^^^^
spec/integration/set_integration_spec.rb:148:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).not_to have_content('Leave Set')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/set_integration_spec.rb:150:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/models/admin_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Admin, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/admin_spec.rb:3:23: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe Admin, type: :model do
                      ^^^^^^^^^^^^
spec/models/admin_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  pending "add some examples to (or delete) #{__FILE__}"
^^
spec/models/role_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Role, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/role_spec.rb:3:22: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe Role, type: :model do
                     ^^^^^^^^^^^^
spec/models/role_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  pending "add some examples to (or delete) #{__FILE__}"
^^
spec/models/set_driver_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe SetDriver, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/set_driver_spec.rb:3:27: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe SetDriver, type: :model do
                          ^^^^^^^^^^^^
spec/models/set_driver_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  pending "add some examples to (or delete) #{__FILE__}"
^^
spec/models/set_role_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe SetRole, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/set_role_spec.rb:3:25: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe SetRole, type: :model do
                        ^^^^^^^^^^^^
spec/models/set_role_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  pending "add some examples to (or delete) #{__FILE__}"
^^
spec/rails_helper.rb:6:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:28:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  ActiveRecord::Migration.maintain_test_schema!
^^
spec/rails_helper.rb:30:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  abort e.to_s.strip
^^
spec/rails_helper.rb:30:3: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
  abort e.to_s.strip
  ^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:34:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  config.fixture_path = "#{::Rails.root}/spec/fixtures"
^^
spec/rails_helper.rb:34:25: C: Rails/FilePath: Prefer Rails.root.join('path/to').
  config.fixture_path = "#{::Rails.root}/spec/fixtures"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:34:28: C: [Correctable] Style/RedundantConstantBase: Remove redundant ::.
  config.fixture_path = "#{::Rails.root}/spec/fixtures"
                           ^^
spec/rails_helper.rb:65:3: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
  config.include Devise::Test::IntegrationHelpers, type: :feature
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:66:3: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
  config.include Devise::Test::ControllerHelpers, type: :controller
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:67:3: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
  config.include Devise::Test::ControllerHelpers, type: :view
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:15:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "/roles", type: :request do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/roles", type: :request do
               ^^^^^^^^
spec/requests/roles_spec.rb:15:26: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe "/roles", type: :request do
                         ^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/roles_spec.rb:20:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  let(:valid_attributes) {
^^
spec/requests/roles_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/roles_spec.rb:21:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    skip("Add a hash of attributes valid for your model")
  ^^
spec/requests/roles_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/roles_spec.rb:25:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    skip("Add a hash of attributes invalid for your model")
  ^^
spec/requests/roles_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/roles_spec.rb:29:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "renders a successful response" do
  ^^
spec/requests/roles_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:30:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      Role.create! valid_attributes
    ^^
spec/requests/roles_spec.rb:30:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      Role.create! valid_attributes
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:32:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to be_successful
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/roles_spec.rb:37:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "renders a successful response" do
  ^^
spec/requests/roles_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:38:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      role = Role.create! valid_attributes
    ^^
spec/requests/roles_spec.rb:38:14: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      role = Role.create! valid_attributes
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:40:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to be_successful
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/roles_spec.rb:45:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "renders a successful response" do
  ^^
spec/requests/roles_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:46:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      get new_role_url
    ^^
spec/requests/roles_spec.rb:47:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to be_successful
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/roles_spec.rb:52:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "renders a successful response" do
  ^^
spec/requests/roles_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:53:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      role = Role.create! valid_attributes
    ^^
spec/requests/roles_spec.rb:53:14: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      role = Role.create! valid_attributes
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:55:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to be_successful
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:60:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    context "with valid parameters" do
  ^^
spec/requests/roles_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:61:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      it "creates a new Role" do
    ^^
spec/requests/roles_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new Role" do
         ^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:62:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        expect {
      ^^
spec/requests/roles_spec.rb:62:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect { ...
        ^^^^^^^^
spec/requests/roles_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/roles_spec.rb:63:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          post roles_url, params: { role: valid_attributes }
        ^^
spec/requests/roles_spec.rb:63:11: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          post roles_url, params: { role: valid_attributes }
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created role" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:68:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        post roles_url, params: { role: valid_attributes }
      ^^
spec/requests/roles_spec.rb:69:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(response).to redirect_to(role_url(Role.last))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:74:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      it "does not create a new Role" do
    ^^
spec/requests/roles_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new Role" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:75:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        expect {
      ^^
spec/requests/roles_spec.rb:75:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect { ...
        ^^^^^^^^
spec/requests/roles_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/roles_spec.rb:76:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          post roles_url, params: { role: invalid_attributes }
        ^^
spec/requests/roles_spec.rb:76:11: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          post roles_url, params: { role: invalid_attributes }
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:77:14: C: [Correctable] RSpec/ChangeByZero: Prefer not_to change over to change.by(0).
        }.to change(Role, :count).by(0)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:80:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/roles_spec.rb:82:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        post roles_url, params: { role: invalid_attributes }
      ^^
spec/requests/roles_spec.rb:83:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(response).to have_http_status(:unprocessable_entity)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:85:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/roles_spec.rb:89:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:90:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    context "with valid parameters" do
  ^^
spec/requests/roles_spec.rb:90:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:91:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      let(:new_attributes) {
    ^^
spec/requests/roles_spec.rb:91:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/roles_spec.rb:92:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        skip("Add a hash of attributes valid for your model")
      ^^
spec/requests/roles_spec.rb:92:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:95:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested role" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:96:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        role = Role.create! valid_attributes
      ^^
spec/requests/roles_spec.rb:96:16: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        role = Role.create! valid_attributes
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:99:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:102:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the role" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:103:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        role = Role.create! valid_attributes
      ^^
spec/requests/roles_spec.rb:103:16: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        role = Role.create! valid_attributes
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:106:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(response).to redirect_to(role_url(role))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:110:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:111:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/roles_spec.rb:112:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      it "renders a response with 422 status (i.e. to display the 'edit' template)" do
    ^^
spec/requests/roles_spec.rb:113:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        role = Role.create! valid_attributes
      ^^
spec/requests/roles_spec.rb:113:16: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        role = Role.create! valid_attributes
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:115:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(response).to have_http_status(:unprocessable_entity)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:117:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/roles_spec.rb:121:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:122:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "destroys the requested role" do
  ^^
spec/requests/roles_spec.rb:122:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested role" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:123:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      role = Role.create! valid_attributes
    ^^
spec/requests/roles_spec.rb:123:14: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      role = Role.create! valid_attributes
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:124:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect { ...
      ^^^^^^^^
spec/requests/roles_spec.rb:124:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/roles_spec.rb:125:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        delete role_url(role)
      ^^
spec/requests/roles_spec.rb:125:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        delete role_url(role)
        ^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:129:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the roles list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:130:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      role = Role.create! valid_attributes
    ^^
spec/requests/roles_spec.rb:130:14: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      role = Role.create! valid_attributes
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/roles_spec.rb:132:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to redirect_to(roles_url)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:15:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "/set_roles", type: :request do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/set_roles", type: :request do
               ^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:15:30: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe "/set_roles", type: :request do
                             ^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/set_roles_spec.rb:20:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  let(:valid_attributes) {
^^
spec/requests/set_roles_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/set_roles_spec.rb:21:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    skip("Add a hash of attributes valid for your model")
  ^^
spec/requests/set_roles_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/set_roles_spec.rb:25:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    skip("Add a hash of attributes invalid for your model")
  ^^
spec/requests/set_roles_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:29:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "renders a successful response" do
  ^^
spec/requests/set_roles_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:30:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      SetRole.create! valid_attributes
    ^^
spec/requests/set_roles_spec.rb:30:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      SetRole.create! valid_attributes
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:32:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to be_successful
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/set_roles_spec.rb:37:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "renders a successful response" do
  ^^
spec/requests/set_roles_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:38:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      set_role = SetRole.create! valid_attributes
    ^^
spec/requests/set_roles_spec.rb:38:18: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      set_role = SetRole.create! valid_attributes
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:40:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to be_successful
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/set_roles_spec.rb:45:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "renders a successful response" do
  ^^
spec/requests/set_roles_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:46:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      get new_set_role_url
    ^^
spec/requests/set_roles_spec.rb:47:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to be_successful
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/set_roles_spec.rb:52:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "renders a successful response" do
  ^^
spec/requests/set_roles_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:53:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      set_role = SetRole.create! valid_attributes
    ^^
spec/requests/set_roles_spec.rb:53:18: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      set_role = SetRole.create! valid_attributes
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:55:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to be_successful
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:60:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    context "with valid parameters" do
  ^^
spec/requests/set_roles_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:61:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      it "creates a new SetRole" do
    ^^
spec/requests/set_roles_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new SetRole" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:62:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        expect {
      ^^
spec/requests/set_roles_spec.rb:62:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect { ...
        ^^^^^^^^
spec/requests/set_roles_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/set_roles_spec.rb:63:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          post set_roles_url, params: { set_role: valid_attributes }
        ^^
spec/requests/set_roles_spec.rb:63:11: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          post set_roles_url, params: { set_role: valid_attributes }
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created set_role" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:68:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        post set_roles_url, params: { set_role: valid_attributes }
      ^^
spec/requests/set_roles_spec.rb:69:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(response).to redirect_to(set_role_url(SetRole.last))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:74:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      it "does not create a new SetRole" do
    ^^
spec/requests/set_roles_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new SetRole" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:75:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        expect {
      ^^
spec/requests/set_roles_spec.rb:75:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect { ...
        ^^^^^^^^
spec/requests/set_roles_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/set_roles_spec.rb:76:9: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
          post set_roles_url, params: { set_role: invalid_attributes }
        ^^
spec/requests/set_roles_spec.rb:76:11: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          post set_roles_url, params: { set_role: invalid_attributes }
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:77:14: C: [Correctable] RSpec/ChangeByZero: Prefer not_to change over to change.by(0).
        }.to change(SetRole, :count).by(0)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:80:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/set_roles_spec.rb:82:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        post set_roles_url, params: { set_role: invalid_attributes }
      ^^
spec/requests/set_roles_spec.rb:83:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(response).to have_http_status(:unprocessable_entity)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:85:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/set_roles_spec.rb:89:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:90:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    context "with valid parameters" do
  ^^
spec/requests/set_roles_spec.rb:90:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:91:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      let(:new_attributes) {
    ^^
spec/requests/set_roles_spec.rb:91:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/set_roles_spec.rb:92:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        skip("Add a hash of attributes valid for your model")
      ^^
spec/requests/set_roles_spec.rb:92:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:95:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested set_role" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:96:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        set_role = SetRole.create! valid_attributes
      ^^
spec/requests/set_roles_spec.rb:96:20: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        set_role = SetRole.create! valid_attributes
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:99:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:102:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the set_role" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:103:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        set_role = SetRole.create! valid_attributes
      ^^
spec/requests/set_roles_spec.rb:103:20: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        set_role = SetRole.create! valid_attributes
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:106:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(response).to redirect_to(set_role_url(set_role))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:110:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:111:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/set_roles_spec.rb:112:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      it "renders a response with 422 status (i.e. to display the 'edit' template)" do
    ^^
spec/requests/set_roles_spec.rb:113:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        set_role = SetRole.create! valid_attributes
      ^^
spec/requests/set_roles_spec.rb:113:20: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        set_role = SetRole.create! valid_attributes
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:115:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        expect(response).to have_http_status(:unprocessable_entity)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:117:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/set_roles_spec.rb:121:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:122:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "destroys the requested set_role" do
  ^^
spec/requests/set_roles_spec.rb:122:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested set_role" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:123:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      set_role = SetRole.create! valid_attributes
    ^^
spec/requests/set_roles_spec.rb:123:18: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      set_role = SetRole.create! valid_attributes
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:124:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect { ...
      ^^^^^^^^
spec/requests/set_roles_spec.rb:124:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/set_roles_spec.rb:125:7: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
        delete set_role_url(set_role)
      ^^
spec/requests/set_roles_spec.rb:125:9: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        delete set_role_url(set_role)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:129:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the set_roles list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:130:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      set_role = SetRole.create! valid_attributes
    ^^
spec/requests/set_roles_spec.rb:130:18: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      set_role = SetRole.create! valid_attributes
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/set_roles_spec.rb:132:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to redirect_to(set_roles_url)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe RolesController, type: :routing do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:3:33: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe RolesController, type: :routing do
                                ^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  describe "routing" do
^^
spec/routing/roles_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/roles_routing_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "routes to #index" do
  ^^
spec/routing/roles_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:6:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(get: "/roles").to route_to("roles#index")
    ^^
spec/routing/roles_routing_spec.rb:6:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(get: "/roles").to route_to("roles#index")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/roles").to route_to("roles#index")
                  ^^^^^^^^
spec/routing/roles_routing_spec.rb:6:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/roles").to route_to("roles#index")
                                        ^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:10:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(get: "/roles/new").to route_to("roles#new")
    ^^
spec/routing/roles_routing_spec.rb:10:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(get: "/roles/new").to route_to("roles#new")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/roles/new").to route_to("roles#new")
                  ^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:10:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/roles/new").to route_to("roles#new")
                                            ^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:14:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(get: "/roles/1").to route_to("roles#show", id: "1")
    ^^
spec/routing/roles_routing_spec.rb:14:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(get: "/roles/1").to route_to("roles#show", id: "1")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/roles/1").to route_to("roles#show", id: "1")
                  ^^^^^^^^^^
spec/routing/roles_routing_spec.rb:14:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/roles/1").to route_to("roles#show", id: "1")
                                          ^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:14:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/roles/1").to route_to("roles#show", id: "1")
                                                            ^^^
spec/routing/roles_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:18:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(get: "/roles/1/edit").to route_to("roles#edit", id: "1")
    ^^
spec/routing/roles_routing_spec.rb:18:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(get: "/roles/1/edit").to route_to("roles#edit", id: "1")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/roles/1/edit").to route_to("roles#edit", id: "1")
                  ^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:18:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/roles/1/edit").to route_to("roles#edit", id: "1")
                                               ^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:18:66: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/roles/1/edit").to route_to("roles#edit", id: "1")
                                                                 ^^^
spec/routing/roles_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:23:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(post: "/roles").to route_to("roles#create")
    ^^
spec/routing/roles_routing_spec.rb:23:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(post: "/roles").to route_to("roles#create")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/roles").to route_to("roles#create")
                   ^^^^^^^^
spec/routing/roles_routing_spec.rb:23:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/roles").to route_to("roles#create")
                                         ^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:27:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(put: "/roles/1").to route_to("roles#update", id: "1")
    ^^
spec/routing/roles_routing_spec.rb:27:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(put: "/roles/1").to route_to("roles#update", id: "1")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/roles/1").to route_to("roles#update", id: "1")
                  ^^^^^^^^^^
spec/routing/roles_routing_spec.rb:27:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/roles/1").to route_to("roles#update", id: "1")
                                          ^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:27:63: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/roles/1").to route_to("roles#update", id: "1")
                                                              ^^^
spec/routing/roles_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:31:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(patch: "/roles/1").to route_to("roles#update", id: "1")
    ^^
spec/routing/roles_routing_spec.rb:31:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(patch: "/roles/1").to route_to("roles#update", id: "1")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/roles/1").to route_to("roles#update", id: "1")
                    ^^^^^^^^^^
spec/routing/roles_routing_spec.rb:31:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/roles/1").to route_to("roles#update", id: "1")
                                            ^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:31:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/roles/1").to route_to("roles#update", id: "1")
                                                                ^^^
spec/routing/roles_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:35:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(delete: "/roles/1").to route_to("roles#destroy", id: "1")
    ^^
spec/routing/roles_routing_spec.rb:35:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(delete: "/roles/1").to route_to("roles#destroy", id: "1")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/roles/1").to route_to("roles#destroy", id: "1")
                     ^^^^^^^^^^
spec/routing/roles_routing_spec.rb:35:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/roles/1").to route_to("roles#destroy", id: "1")
                                             ^^^^^^^^^^^^^^^
spec/routing/roles_routing_spec.rb:35:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/roles/1").to route_to("roles#destroy", id: "1")
                                                                  ^^^
spec/routing/set_roles_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe SetRolesController, type: :routing do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:3:36: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe SetRolesController, type: :routing do
                                   ^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  describe "routing" do
^^
spec/routing/set_roles_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    it "routes to #index" do
  ^^
spec/routing/set_roles_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:6:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(get: "/set_roles").to route_to("set_roles#index")
    ^^
spec/routing/set_roles_routing_spec.rb:6:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(get: "/set_roles").to route_to("set_roles#index")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/set_roles").to route_to("set_roles#index")
                  ^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:6:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/set_roles").to route_to("set_roles#index")
                                            ^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:10:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(get: "/set_roles/new").to route_to("set_roles#new")
    ^^
spec/routing/set_roles_routing_spec.rb:10:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(get: "/set_roles/new").to route_to("set_roles#new")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/set_roles/new").to route_to("set_roles#new")
                  ^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:10:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/set_roles/new").to route_to("set_roles#new")
                                                ^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:14:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(get: "/set_roles/1").to route_to("set_roles#show", id: "1")
    ^^
spec/routing/set_roles_routing_spec.rb:14:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(get: "/set_roles/1").to route_to("set_roles#show", id: "1")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/set_roles/1").to route_to("set_roles#show", id: "1")
                  ^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:14:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/set_roles/1").to route_to("set_roles#show", id: "1")
                                              ^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:14:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/set_roles/1").to route_to("set_roles#show", id: "1")
                                                                    ^^^
spec/routing/set_roles_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:18:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(get: "/set_roles/1/edit").to route_to("set_roles#edit", id: "1")
    ^^
spec/routing/set_roles_routing_spec.rb:18:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(get: "/set_roles/1/edit").to route_to("set_roles#edit", id: "1")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/set_roles/1/edit").to route_to("set_roles#edit", id: "1")
                  ^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:18:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/set_roles/1/edit").to route_to("set_roles#edit", id: "1")
                                                   ^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:18:74: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/set_roles/1/edit").to route_to("set_roles#edit", id: "1")
                                                                         ^^^
spec/routing/set_roles_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:23:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(post: "/set_roles").to route_to("set_roles#create")
    ^^
spec/routing/set_roles_routing_spec.rb:23:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(post: "/set_roles").to route_to("set_roles#create")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/set_roles").to route_to("set_roles#create")
                   ^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:23:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/set_roles").to route_to("set_roles#create")
                                             ^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:27:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(put: "/set_roles/1").to route_to("set_roles#update", id: "1")
    ^^
spec/routing/set_roles_routing_spec.rb:27:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(put: "/set_roles/1").to route_to("set_roles#update", id: "1")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/set_roles/1").to route_to("set_roles#update", id: "1")
                  ^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:27:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/set_roles/1").to route_to("set_roles#update", id: "1")
                                              ^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:27:71: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/set_roles/1").to route_to("set_roles#update", id: "1")
                                                                      ^^^
spec/routing/set_roles_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:31:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(patch: "/set_roles/1").to route_to("set_roles#update", id: "1")
    ^^
spec/routing/set_roles_routing_spec.rb:31:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(patch: "/set_roles/1").to route_to("set_roles#update", id: "1")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/set_roles/1").to route_to("set_roles#update", id: "1")
                    ^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:31:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/set_roles/1").to route_to("set_roles#update", id: "1")
                                                ^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:31:73: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/set_roles/1").to route_to("set_roles#update", id: "1")
                                                                        ^^^
spec/routing/set_roles_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:35:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      expect(delete: "/set_roles/1").to route_to("set_roles#destroy", id: "1")
    ^^
spec/routing/set_roles_routing_spec.rb:35:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(delete: "/set_roles/1").to route_to("set_roles#destroy", id: "1")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/set_roles/1").to route_to("set_roles#destroy", id: "1")
                     ^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:35:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/set_roles/1").to route_to("set_roles#destroy", id: "1")
                                                 ^^^^^^^^^^^^^^^^^^^
spec/routing/set_roles_routing_spec.rb:35:75: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/set_roles/1").to route_to("set_roles#destroy", id: "1")
                                                                          ^^^
spec/unit/role_unit_spec.rb:4:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe Role, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/role_unit_spec.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  subject do
^^
spec/unit/role_unit_spec.rb:6:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    described_class.new(role_id: 1 ,role_name: 'team')
  ^^
spec/unit/role_unit_spec.rb:6:35: C: [Correctable] Layout/SpaceBeforeComma: Space found before comma.
    described_class.new(role_id: 1 ,role_name: 'team')
                                  ^
spec/unit/role_unit_spec.rb:6:36: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    described_class.new(role_id: 1 ,role_name: 'team')
                                   ^
spec/unit/role_unit_spec.rb:10:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    expect(subject).to be_valid
  ^^
spec/unit/role_unit_spec.rb:10:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/role_unit_spec.rb:10:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/role_unit_spec.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    subject.role_id = nil
  ^^
spec/unit/role_unit_spec.rb:14:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.role_id = nil
    ^^^^^^^
spec/unit/role_unit_spec.rb:15:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/role_unit_spec.rb:15:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/role_unit_spec.rb:19:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    subject.role_name = nil
  ^^
spec/unit/role_unit_spec.rb:19:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.role_name = nil
    ^^^^^^^
spec/unit/role_unit_spec.rb:20:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/role_unit_spec.rb:20:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/role_unit_spec.rb:24:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    subject.role_id = -1
  ^^
spec/unit/role_unit_spec.rb:24:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.role_id = -1
    ^^^^^^^
spec/unit/role_unit_spec.rb:25:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/role_unit_spec.rb:25:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/role_unit_spec.rb:27:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/unit/role_unit_spec.rb:28:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/unit/set_unit_spec.rb:3:1: C: RSpec/FilePath: Spec path should end with wakeboard_set*_spec.rb.
RSpec.describe WakeboardSet, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe WakeboardSet, type: :model do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  subject do
^^
spec/unit/set_unit_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    described_class.new(
  ^^
spec/unit/set_unit_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
      dib_count: 0, ...
      ^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:9:23: C: [Correctable] Style/RedundantParentheses: Don't use parentheses around a method call.
      scheduled_date: (DateTime.current).tomorrow,
                      ^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:9:50: C: [Correctable] Style/TrailingCommaInArguments: Avoid comma after the last parameter of a method call.
      scheduled_date: (DateTime.current).tomorrow,
                                                 ^
spec/unit/set_unit_spec.rb:10:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 4)
    )
    ^
spec/unit/set_unit_spec.rb:13:3: C: [Correctable] RSpec/HookArgument: Omit the default :example argument for RSpec hooks.
  before(:example) do
  ^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    expect(subject).to be_valid
  ^^
spec/unit/set_unit_spec.rb:14:5: C: RSpec/ExpectInHook: Do not use expect in before hook
    expect(subject).to be_valid
    ^^^^^^
spec/unit/set_unit_spec.rb:14:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:14:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:18:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    expect(subject).to be_valid
  ^^
spec/unit/set_unit_spec.rb:18:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:18:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:22:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    subject.driver_count = 0
  ^^
spec/unit/set_unit_spec.rb:22:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.driver_count = 0
    ^^^^^^^
spec/unit/set_unit_spec.rb:23:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:23:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:26:3: C: RSpec/MultipleExpectations: Example has too many expectations [5/1].
  it 'is not valid for negative dib, chib, and driver limits' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:27:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    subject.dib_limit = -1
  ^^
spec/unit/set_unit_spec.rb:27:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.dib_limit = -1
    ^^^^^^^
spec/unit/set_unit_spec.rb:28:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:28:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:30:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.dib_limit = 4
    ^^^^^^^
spec/unit/set_unit_spec.rb:31:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:31:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:33:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.chib_limit = -1
    ^^^^^^^
spec/unit/set_unit_spec.rb:34:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:34:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:36:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.chib_limit = 3
    ^^^^^^^
spec/unit/set_unit_spec.rb:37:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:37:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:39:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.driver_limit = -1
    ^^^^^^^
spec/unit/set_unit_spec.rb:40:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:40:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:43:3: C: RSpec/MultipleExpectations: Example has too many expectations [5/1].
  it 'is not valid for negative dib, chib, and driver counts' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:44:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    subject.dib_count = -1
  ^^
spec/unit/set_unit_spec.rb:44:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.dib_count = -1
    ^^^^^^^
spec/unit/set_unit_spec.rb:45:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:45:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:47:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.dib_count = 0
    ^^^^^^^
spec/unit/set_unit_spec.rb:48:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:48:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:50:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.chib_count = -1
    ^^^^^^^
spec/unit/set_unit_spec.rb:51:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:51:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:53:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.chib_count = 0
    ^^^^^^^
spec/unit/set_unit_spec.rb:54:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:54:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:56:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.driver_count = -1
    ^^^^^^^
spec/unit/set_unit_spec.rb:57:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:57:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:60:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  it 'is not valid when current dib count is > dib limit' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:61:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    subject.dib_limit = 2
  ^^
spec/unit/set_unit_spec.rb:61:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.dib_limit = 2
    ^^^^^^^
spec/unit/set_unit_spec.rb:62:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.dib_count = 3
    ^^^^^^^
spec/unit/set_unit_spec.rb:63:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject.dib_count).to be > subject.dib_limit
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:63:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject.dib_count).to be > subject.dib_limit
           ^^^^^^^
spec/unit/set_unit_spec.rb:63:39: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject.dib_count).to be > subject.dib_limit
                                      ^^^^^^^
spec/unit/set_unit_spec.rb:64:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:64:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:67:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  it 'is valid when current dib count is = dib limit' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:68:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    subject.dib_limit = 3
  ^^
spec/unit/set_unit_spec.rb:68:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.dib_limit = 3
    ^^^^^^^
spec/unit/set_unit_spec.rb:69:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.dib_count = 3
    ^^^^^^^
spec/unit/set_unit_spec.rb:70:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject.dib_count).to eq(subject.dib_limit)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:70:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject.dib_count).to eq(subject.dib_limit)
           ^^^^^^^
spec/unit/set_unit_spec.rb:70:37: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject.dib_count).to eq(subject.dib_limit)
                                    ^^^^^^^
spec/unit/set_unit_spec.rb:71:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:71:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:74:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  it 'is not valid when current chib count is > chib limit' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:75:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    subject.chib_limit = 2
  ^^
spec/unit/set_unit_spec.rb:75:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.chib_limit = 2
    ^^^^^^^
spec/unit/set_unit_spec.rb:76:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.chib_count = 3
    ^^^^^^^
spec/unit/set_unit_spec.rb:77:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject.chib_count).to be > subject.chib_limit
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:77:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject.chib_count).to be > subject.chib_limit
           ^^^^^^^
spec/unit/set_unit_spec.rb:77:40: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject.chib_count).to be > subject.chib_limit
                                       ^^^^^^^
spec/unit/set_unit_spec.rb:78:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:78:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:81:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  it 'is valid when current chib count is = chib limit' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:82:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    subject.chib_limit = 3
  ^^
spec/unit/set_unit_spec.rb:82:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.chib_limit = 3
    ^^^^^^^
spec/unit/set_unit_spec.rb:83:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.chib_count = 3
    ^^^^^^^
spec/unit/set_unit_spec.rb:84:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject.chib_count).to eq(subject.chib_limit)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:84:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject.chib_count).to eq(subject.chib_limit)
           ^^^^^^^
spec/unit/set_unit_spec.rb:84:38: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject.chib_count).to eq(subject.chib_limit)
                                     ^^^^^^^
spec/unit/set_unit_spec.rb:85:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:85:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:88:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  it 'is not valid when scheduled date is in the past' do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:89:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    now = DateTime.current
  ^^
spec/unit/set_unit_spec.rb:90:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.scheduled_date = now.days_ago(1)
    ^^^^^^^
spec/unit/set_unit_spec.rb:91:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject.scheduled_date.prev_day?).to be true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:91:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject.scheduled_date.prev_day?).to be true
           ^^^^^^^
spec/unit/set_unit_spec.rb:91:49: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject.scheduled_date.prev_day?).to be true
                                                ^^^^^^^
spec/unit/set_unit_spec.rb:92:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(subject).not_to be_valid
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:92:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to be_valid
           ^^^^^^^
spec/unit/set_unit_spec.rb:96:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    before :each do
  ^^
spec/unit/set_unit_spec.rb:96:5: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
    before :each do
    ^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:97:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @user = Admin.find_or_create_by(email: "aramone@tamu.edu")
    ^^
spec/unit/set_unit_spec.rb:97:21: C: [Correctable] Rails/SaveBang: Use find_or_create_by! instead of find_or_create_by if the return value is not checked.
      @user = Admin.find_or_create_by(email: "aramone@tamu.edu")
                    ^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:97:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @user = Admin.find_or_create_by(email: "aramone@tamu.edu")
                                             ^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:98:14: C: [Correctable] RSpec/DescribedClass: Use described_class instead of WakeboardSet.
      @set = WakeboardSet.create(
             ^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:98:27: C: [Correctable] Rails/SaveBang: Use create! instead of create if the return value is not checked.
      @set = WakeboardSet.create(
                          ^^^^^^
spec/unit/set_unit_spec.rb:99:9: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
        dib_count: 0, ...
        ^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:102:25: C: [Correctable] Style/RedundantParentheses: Don't use parentheses around a method call.
        scheduled_date: (DateTime.current).tomorrow
                        ^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:103:7: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 3 (not 6)
      )
      ^
spec/unit/set_unit_spec.rb:107:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      as_dib = true
    ^^
spec/unit/set_unit_spec.rb:108:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:108:36: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, as_dib)
                                   ^^^^^
spec/unit/set_unit_spec.rb:109:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be true
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:109:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be true
                        ^^^^^^^
spec/unit/set_unit_spec.rb:113:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      as_dib = false
    ^^
spec/unit/set_unit_spec.rb:114:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:114:36: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, as_dib)
                                   ^^^^^
spec/unit/set_unit_spec.rb:115:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be true
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:115:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be true
                        ^^^^^^^
spec/unit/set_unit_spec.rb:118:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'is false when a rider is on the set as dib, joins as dib' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:119:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      as_dib = true
    ^^
spec/unit/set_unit_spec.rb:120:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      joined = @set.join(@user.id, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:120:26: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      joined = @set.join(@user.id, as_dib)
                         ^^^^^
spec/unit/set_unit_spec.rb:121:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(joined).to be true
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:121:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(joined).to be true
                        ^^^^^^^
spec/unit/set_unit_spec.rb:122:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:122:36: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, as_dib)
                                   ^^^^^
spec/unit/set_unit_spec.rb:123:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:123:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:126:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'is false when a rider is on the set as dib, joins as chib' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:127:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      as_dib = true
    ^^
spec/unit/set_unit_spec.rb:128:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      joined = @set.join(@user.id, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:128:26: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      joined = @set.join(@user.id, as_dib)
                         ^^^^^
spec/unit/set_unit_spec.rb:129:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(joined).to be true
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:129:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(joined).to be true
                        ^^^^^^^
spec/unit/set_unit_spec.rb:130:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, !as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:130:36: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, !as_dib)
                                   ^^^^^
spec/unit/set_unit_spec.rb:131:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:131:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:134:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'is false when a rider is on the set as chib, joins as chib' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:135:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      as_dib = false
    ^^
spec/unit/set_unit_spec.rb:136:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      joined = @set.join(@user.id, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:136:26: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      joined = @set.join(@user.id, as_dib)
                         ^^^^^
spec/unit/set_unit_spec.rb:137:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(joined).to be true
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:137:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(joined).to be true
                        ^^^^^^^
spec/unit/set_unit_spec.rb:138:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:138:36: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, as_dib)
                                   ^^^^^
spec/unit/set_unit_spec.rb:139:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:139:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:142:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'is false when a rider is on the set as chib and joins as dib' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:143:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      as_dib = false
    ^^
spec/unit/set_unit_spec.rb:144:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      joined = @set.join(@user.id, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:144:26: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      joined = @set.join(@user.id, as_dib)
                         ^^^^^
spec/unit/set_unit_spec.rb:145:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(joined).to be true
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:145:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(joined).to be true
                        ^^^^^^^
spec/unit/set_unit_spec.rb:146:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, !as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:146:36: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(@user.id, !as_dib)
                                   ^^^^^
spec/unit/set_unit_spec.rb:147:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:147:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:151:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      as_dib = true
    ^^
spec/unit/set_unit_spec.rb:152:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(nil, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:153:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:153:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:157:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      as_dib = true
    ^^
spec/unit/set_unit_spec.rb:158:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(-1, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:159:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:159:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:163:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      result = @set.rider_can_join(-1, nil)
    ^^
spec/unit/set_unit_spec.rb:163:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(-1, nil)
               ^^^^
spec/unit/set_unit_spec.rb:164:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:164:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:168:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      result = @set.rider_can_join(1, nil)
    ^^
spec/unit/set_unit_spec.rb:168:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(1, nil)
               ^^^^
spec/unit/set_unit_spec.rb:169:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:169:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:173:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @set.scheduled_date = DateTime.current.prev_day()
    ^^
spec/unit/set_unit_spec.rb:173:7: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      @set.scheduled_date = DateTime.current.prev_day()
      ^^^^
spec/unit/set_unit_spec.rb:173:54: C: [Correctable] Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
      @set.scheduled_date = DateTime.current.prev_day()
                                                     ^^
spec/unit/set_unit_spec.rb:174:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(1, true)
               ^^^^
spec/unit/set_unit_spec.rb:175:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:175:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:178:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'is false when dib_count is = dib_limit' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:179:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @set.dib_count = 4
    ^^
spec/unit/set_unit_spec.rb:179:7: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      @set.dib_count = 4
      ^^^^
spec/unit/set_unit_spec.rb:180:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(@set.dib_count).to eq(@set.dib_limit)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:180:14: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      expect(@set.dib_count).to eq(@set.dib_limit)
             ^^^^
spec/unit/set_unit_spec.rb:180:36: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      expect(@set.dib_count).to eq(@set.dib_limit)
                                   ^^^^
spec/unit/set_unit_spec.rb:182:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(1, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:183:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:183:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:186:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'is false when chib_count is = chib_limit' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:187:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @set.chib_count = 3
    ^^
spec/unit/set_unit_spec.rb:187:7: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      @set.chib_count = 3
      ^^^^
spec/unit/set_unit_spec.rb:188:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(@set.chib_count).to eq(@set.chib_limit)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:188:14: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      expect(@set.chib_count).to eq(@set.chib_limit)
             ^^^^
spec/unit/set_unit_spec.rb:188:37: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      expect(@set.chib_count).to eq(@set.chib_limit)
                                    ^^^^
spec/unit/set_unit_spec.rb:190:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(1, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:191:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:191:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be false
                        ^^^^^^^^
spec/unit/set_unit_spec.rb:194:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'is true when chib_count is = chib_limit - 1' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:195:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @set.chib_count = 2
    ^^
spec/unit/set_unit_spec.rb:195:7: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      @set.chib_count = 2
      ^^^^
spec/unit/set_unit_spec.rb:196:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(@set.chib_count).to eq(@set.chib_limit - 1)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:196:14: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      expect(@set.chib_count).to eq(@set.chib_limit - 1)
             ^^^^
spec/unit/set_unit_spec.rb:196:37: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      expect(@set.chib_count).to eq(@set.chib_limit - 1)
                                    ^^^^
spec/unit/set_unit_spec.rb:198:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(1, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:199:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be true
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:199:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be true
                        ^^^^^^^
spec/unit/set_unit_spec.rb:202:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'is true when dib_count is = dib_limit - 1' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:203:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      @set.dib_count = 3
    ^^
spec/unit/set_unit_spec.rb:203:7: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      @set.dib_count = 3
      ^^^^
spec/unit/set_unit_spec.rb:204:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(@set.dib_count).to eq(@set.dib_limit - 1)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:204:14: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      expect(@set.dib_count).to eq(@set.dib_limit - 1)
             ^^^^
spec/unit/set_unit_spec.rb:204:36: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      expect(@set.dib_count).to eq(@set.dib_limit - 1)
                                   ^^^^
spec/unit/set_unit_spec.rb:206:16: C: RSpec/InstanceVariable: Avoid instance variables – use let, a method call, or a local variable (if possible).
      result = @set.rider_can_join(1, as_dib)
               ^^^^
spec/unit/set_unit_spec.rb:207:7: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be true
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/set_unit_spec.rb:207:25: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(result).to be true
                        ^^^^^^^
spec/unit/set_unit_spec.rb:210:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/unit/unit_spec.rb:5:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:29:6: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
# end
     
spec/views/roles/edit.html.erb_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "roles/edit", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "roles/edit", type: :view do
               ^^^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:3:30: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe "roles/edit", type: :view do
                             ^^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  let(:role) {
^^
spec/views/roles/edit.html.erb_spec.rb:4:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:role) {
             ^
spec/views/roles/edit.html.erb_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    Role.create!(
  ^^
spec/views/roles/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
      role_id: 1, ...
      ^^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:7:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      role_name: "MyString"
                 ^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:8:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 4)
    )
    ^
spec/views/roles/edit.html.erb_spec.rb:11:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before(:each) do
  ^^^^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:12:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assign(:role, role)
  ^^
spec/views/roles/edit.html.erb_spec.rb:15:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit role form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:16:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    render
  ^^
spec/views/roles/edit.html.erb_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", role_path(role), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:18:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", role_path(role), "post" do
                                                               ^^^^^^
spec/views/roles/edit.html.erb_spec.rb:19:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/roles/edit.html.erb_spec.rb:20:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      assert_select "input[name=?]", "role[role_id]"
    ^^
spec/views/roles/edit.html.erb_spec.rb:20:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "role[role_id]"
                    ^^^^^^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:20:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "role[role_id]"
                                     ^^^^^^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:22:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "role[role_name]"
                    ^^^^^^^^^^^^^^^
spec/views/roles/edit.html.erb_spec.rb:22:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "role[role_name]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "roles/index", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "roles/index", type: :view do
               ^^^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:3:31: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe "roles/index", type: :view do
                              ^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before(:each) do
^^
spec/views/roles/index.html.erb_spec.rb:4:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before(:each) do
  ^^^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assign(:roles, [
  ^^
spec/views/roles/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 5 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
      Role.create!( ...
      ^^^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:7:9: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
        role_id: 2, ...
        ^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:8:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        role_name: "Role Name"
                   ^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:9:7: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 3 (not 6)
      ),
      ^
spec/views/roles/index.html.erb_spec.rb:11:9: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
        role_id: 2, ...
        ^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:12:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        role_name: "Role Name"
                   ^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:13:7: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 3 (not 6)
      )
      ^
spec/views/roles/index.html.erb_spec.rb:14:6: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
    ])
     ^
spec/views/roles/index.html.erb_spec.rb:17:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of roles" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/index.html.erb_spec.rb:18:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    render
  ^^
spec/views/roles/index.html.erb_spec.rb:21:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select cell_selector, text: Regexp.new("Role Name".to_s), count: 2
                                                  ^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "roles/new", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "roles/new", type: :view do
               ^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:3:29: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe "roles/new", type: :view do
                            ^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before(:each) do
^^
spec/views/roles/new.html.erb_spec.rb:4:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before(:each) do
  ^^^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assign(:role, Role.new(
  ^^
spec/views/roles/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Role.new(.
      role_id: 1, ...
      ^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:7:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      role_name: "MyString"
                 ^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:8:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 4)
    ))
    ^
spec/views/roles/new.html.erb_spec.rb:8:6: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
    ))
     ^
spec/views/roles/new.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new role form" do
     ^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:12:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    render
  ^^
spec/views/roles/new.html.erb_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", roles_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:14:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", roles_path, "post" do
                                                          ^^^^^^
spec/views/roles/new.html.erb_spec.rb:15:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/roles/new.html.erb_spec.rb:16:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      assert_select "input[name=?]", "role[role_id]"
    ^^
spec/views/roles/new.html.erb_spec.rb:16:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "role[role_id]"
                    ^^^^^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:16:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "role[role_id]"
                                     ^^^^^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:18:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "role[role_name]"
                    ^^^^^^^^^^^^^^^
spec/views/roles/new.html.erb_spec.rb:18:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "role[role_name]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/roles/show.html.erb_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "roles/show", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "roles/show", type: :view do
               ^^^^^^^^^^^^
spec/views/roles/show.html.erb_spec.rb:3:30: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe "roles/show", type: :view do
                             ^^^^^^^^^^^
spec/views/roles/show.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before(:each) do
^^
spec/views/roles/show.html.erb_spec.rb:4:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before(:each) do
  ^^^^^^^^^^^^^
spec/views/roles/show.html.erb_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assign(:role, Role.create!(
  ^^
spec/views/roles/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Role.create!(.
      role_id: 2, ...
      ^^^^^^^^^^^
spec/views/roles/show.html.erb_spec.rb:7:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      role_name: "Role Name"
                 ^^^^^^^^^^^
spec/views/roles/show.html.erb_spec.rb:8:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 4)
    ))
    ^
spec/views/roles/show.html.erb_spec.rb:8:6: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
    ))
     ^
spec/views/roles/show.html.erb_spec.rb:11:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  it "renders attributes in <p>" do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/show.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/show.html.erb_spec.rb:12:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    render
  ^^
spec/views/roles/show.html.erb_spec.rb:13:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(rendered).to match(/2/)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/roles/show.html.erb_spec.rb:14:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(rendered).to match(/Role Name/)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "set_roles/edit", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "set_roles/edit", type: :view do
               ^^^^^^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:3:34: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe "set_roles/edit", type: :view do
                                 ^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  let(:set_role) {
^^
spec/views/set_roles/edit.html.erb_spec.rb:4:18: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:set_role) {
                 ^
spec/views/set_roles/edit.html.erb_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    SetRole.create!(
  ^^
spec/views/set_roles/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
      role_id: nil, ...
      ^^^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:8:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 4)
    )
    ^
spec/views/set_roles/edit.html.erb_spec.rb:11:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before(:each) do
  ^^^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:12:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assign(:set_role, set_role)
  ^^
spec/views/set_roles/edit.html.erb_spec.rb:15:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit set_role form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:16:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    render
  ^^
spec/views/set_roles/edit.html.erb_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", set_role_path(set_role), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:18:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", set_role_path(set_role), "post" do
                                                                       ^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:19:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/set_roles/edit.html.erb_spec.rb:20:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      assert_select "input[name=?]", "set_role[role_id_id]"
    ^^
spec/views/set_roles/edit.html.erb_spec.rb:20:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "set_role[role_id_id]"
                    ^^^^^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:20:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "set_role[role_id_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:22:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "set_role[user_id_id]"
                    ^^^^^^^^^^^^^^^
spec/views/set_roles/edit.html.erb_spec.rb:22:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "set_role[user_id_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/index.html.erb_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "set_roles/index", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "set_roles/index", type: :view do
               ^^^^^^^^^^^^^^^^^
spec/views/set_roles/index.html.erb_spec.rb:3:35: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe "set_roles/index", type: :view do
                                  ^^^^^^^^^^^
spec/views/set_roles/index.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before(:each) do
^^
spec/views/set_roles/index.html.erb_spec.rb:4:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before(:each) do
  ^^^^^^^^^^^^^
spec/views/set_roles/index.html.erb_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assign(:set_roles, [
  ^^
spec/views/set_roles/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 5 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
      SetRole.create!( ...
      ^^^^^^^^^^^^^^^^
spec/views/set_roles/index.html.erb_spec.rb:7:9: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
        role_id: nil, ...
        ^^^^^^^^^^^^^
spec/views/set_roles/index.html.erb_spec.rb:9:7: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 3 (not 6)
      ),
      ^
spec/views/set_roles/index.html.erb_spec.rb:11:9: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
        role_id: nil, ...
        ^^^^^^^^^^^^^
spec/views/set_roles/index.html.erb_spec.rb:13:7: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 3 (not 6)
      )
      ^
spec/views/set_roles/index.html.erb_spec.rb:14:6: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
    ])
     ^
spec/views/set_roles/index.html.erb_spec.rb:17:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of set_roles" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/index.html.erb_spec.rb:18:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    render
  ^^
spec/views/set_roles/new.html.erb_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "set_roles/new", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "set_roles/new", type: :view do
               ^^^^^^^^^^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:3:33: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe "set_roles/new", type: :view do
                                ^^^^^^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before(:each) do
^^
spec/views/set_roles/new.html.erb_spec.rb:4:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before(:each) do
  ^^^^^^^^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assign(:set_role, SetRole.new(
  ^^
spec/views/set_roles/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than SetRole.new(.
      role_id: nil, ...
      ^^^^^^^^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:8:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 4)
    ))
    ^
spec/views/set_roles/new.html.erb_spec.rb:8:6: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
    ))
     ^
spec/views/set_roles/new.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new set_role form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:12:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    render
  ^^
spec/views/set_roles/new.html.erb_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", set_roles_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:14:63: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", set_roles_path, "post" do
                                                              ^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:15:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/set_roles/new.html.erb_spec.rb:16:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      assert_select "input[name=?]", "set_role[role_id_id]"
    ^^
spec/views/set_roles/new.html.erb_spec.rb:16:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "set_role[role_id_id]"
                    ^^^^^^^^^^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:16:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "set_role[role_id_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:18:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "set_role[user_id_id]"
                    ^^^^^^^^^^^^^^^
spec/views/set_roles/new.html.erb_spec.rb:18:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "set_role[user_id_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/show.html.erb_spec.rb:3:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe "set_roles/show", type: :view do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "set_roles/show", type: :view do
               ^^^^^^^^^^^^^^^^
spec/views/set_roles/show.html.erb_spec.rb:3:34: C: [Correctable] RSpec/Rails/InferredSpecType: Remove redundant spec type.
RSpec.describe "set_roles/show", type: :view do
                                 ^^^^^^^^^^^
spec/views/set_roles/show.html.erb_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  before(:each) do
^^
spec/views/set_roles/show.html.erb_spec.rb:4:3: C: [Correctable] RSpec/HookArgument: Omit the default :each argument for RSpec hooks.
  before(:each) do
  ^^^^^^^^^^^^^
spec/views/set_roles/show.html.erb_spec.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assign(:set_role, SetRole.create!(
  ^^
spec/views/set_roles/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than SetRole.create!(.
      role_id: nil, ...
      ^^^^^^^^^^^^^
spec/views/set_roles/show.html.erb_spec.rb:8:5: C: [Correctable] Layout/ClosingParenthesisIndentation: Indent ) to column 1 (not 4)
    ))
    ^
spec/views/set_roles/show.html.erb_spec.rb:8:6: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
    ))
     ^
spec/views/set_roles/show.html.erb_spec.rb:11:3: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
  it "renders attributes in <p>" do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/show.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/show.html.erb_spec.rb:12:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    render
  ^^
spec/views/set_roles/show.html.erb_spec.rb:13:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(rendered).to match(//)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/set_roles/show.html.erb_spec.rb:14:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(rendered).to match(//)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/application_system_test_case.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/application_system_test_case.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  driven_by :selenium, using: :chrome, screen_size: [1400, 1400]
^^
test/channels/application_cable/connection_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:10:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 5).
  # end
  ^^^^^
test/controllers/receipts_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  setup do
^^
test/controllers/receipts_controller_test.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @receipt = receipts(:one)
  ^^
test/controllers/receipts_controller_test.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should get index" do
^^
test/controllers/receipts_controller_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:9:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get receipts_url
  ^^
test/controllers/receipts_controller_test.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should get new" do
^^
test/controllers/receipts_controller_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get new" do
       ^^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get new_receipt_url
  ^^
test/controllers/receipts_controller_test.rb:18:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should create receipt" do
^^
test/controllers/receipts_controller_test.rb:18:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create receipt" do
       ^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:19:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assert_difference("Receipt.count") do
  ^^
test/controllers/receipts_controller_test.rb:19:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_difference("Receipt.count") do
                      ^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:20:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      post receipts_url, params: { receipt: { date_approved: @receipt.date_approved, date_made: @receipt.date_made, date_refunded: @receipt.date_refunded, receipt_id: @receipt.receipt_id, stage: @receipt.stage, user_id: @receipt.user_id, value: @receipt.value } }
    ^^
test/controllers/receipts_controller_test.rb:20:101: C: [Correctable] Layout/LineLength: Line is too long. [263/100]
      post receipts_url, params: { receipt: { date_approved: @receipt.date_approved, date_made: @receipt.date_made, date_refunded: @receipt.date_refunded, receipt_id: @receipt.receipt_id, stage: @receipt.stage, user_id: @receipt.user_id, value: @receipt.value } }
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:26:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should show receipt" do
^^
test/controllers/receipts_controller_test.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should show receipt" do
       ^^^^^^^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:27:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get receipt_url(@receipt)
  ^^
test/controllers/receipts_controller_test.rb:31:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should get edit" do
^^
test/controllers/receipts_controller_test.rb:31:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get edit" do
       ^^^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:32:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get edit_receipt_url(@receipt)
  ^^
test/controllers/receipts_controller_test.rb:36:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should update receipt" do
^^
test/controllers/receipts_controller_test.rb:36:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update receipt" do
       ^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:37:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    patch receipt_url(@receipt), params: { receipt: { date_approved: @receipt.date_approved, date_made: @receipt.date_made, date_refunded: @receipt.date_refunded, receipt_id: @receipt.receipt_id, stage: @receipt.stage, user_id: @receipt.user_id, value: @receipt.value } }
  ^^
test/controllers/receipts_controller_test.rb:37:101: C: [Correctable] Layout/LineLength: Line is too long. [271/100]
    patch receipt_url(@receipt), params: { receipt: { date_approved: @receipt.date_approved, date_made: @receipt.date_made, date_refunded: @receipt.date_refunded, receipt_id: @receipt.receipt_id, stage: @receipt.stage, user_id: @receipt.user_id, value: @receipt.value } }
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:41:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should destroy receipt" do
^^
test/controllers/receipts_controller_test.rb:41:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy receipt" do
       ^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:42:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assert_difference("Receipt.count", -1) do
  ^^
test/controllers/receipts_controller_test.rb:42:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_difference("Receipt.count", -1) do
                      ^^^^^^^^^^^^^^^
test/controllers/receipts_controller_test.rb:43:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      delete receipt_url(@receipt)
    ^^
test/controllers/users_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  setup do
^^
test/controllers/users_controller_test.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = users(:one)
  ^^
test/controllers/users_controller_test.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should get index" do
^^
test/controllers/users_controller_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:9:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get users_url
  ^^
test/controllers/users_controller_test.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should get new" do
^^
test/controllers/users_controller_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get new" do
       ^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get new_user_url
  ^^
test/controllers/users_controller_test.rb:18:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should create user" do
^^
test/controllers/users_controller_test.rb:18:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create user" do
       ^^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:19:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assert_difference("User.count") do
  ^^
test/controllers/users_controller_test.rb:19:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_difference("User.count") do
                      ^^^^^^^^^^^^
test/controllers/users_controller_test.rb:20:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      post users_url, params: { user: { email: @user.email, firstname: @user.firstname, isAdmin: @user.isAdmin, isDriver: @user.isDriver, isRider: @user.isRider, isTreasurer: @user.isTreasurer, lastname: @user.lastname, password: @user.password } }
    ^^
test/controllers/users_controller_test.rb:20:101: C: [Correctable] Layout/LineLength: Line is too long. [248/100]
      post users_url, params: { user: { email: @user.email, firstname: @user.firstname, isAdmin: @user.isAdmin, isDriver: @user.isDriver, isRider: @user.isRider, isTreasurer: @user.isTreasurer, lastname: @user.lastname, password: @user.password } }
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:26:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should show user" do
^^
test/controllers/users_controller_test.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should show user" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:27:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get user_url(@user)
  ^^
test/controllers/users_controller_test.rb:31:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should get edit" do
^^
test/controllers/users_controller_test.rb:31:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get edit" do
       ^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:32:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get edit_user_url(@user)
  ^^
test/controllers/users_controller_test.rb:36:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should update user" do
^^
test/controllers/users_controller_test.rb:36:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update user" do
       ^^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:37:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    patch user_url(@user), params: { user: { email: @user.email, firstname: @user.firstname, isAdmin: @user.isAdmin, isDriver: @user.isDriver, isRider: @user.isRider, isTreasurer: @user.isTreasurer, lastname: @user.lastname, password: @user.password } }
  ^^
test/controllers/users_controller_test.rb:37:101: C: [Correctable] Layout/LineLength: Line is too long. [253/100]
    patch user_url(@user), params: { user: { email: @user.email, firstname: @user.firstname, isAdmin: @user.isAdmin, isDriver: @user.isDriver, isRider: @user.isRider, isTreasurer: @user.isTreasurer, lastname: @user.lastname, password: @user.password } }
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:41:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should destroy user" do
^^
test/controllers/users_controller_test.rb:41:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy user" do
       ^^^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:42:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assert_difference("User.count", -1) do
  ^^
test/controllers/users_controller_test.rb:42:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_difference("User.count", -1) do
                      ^^^^^^^^^^^^
test/controllers/users_controller_test.rb:43:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      delete user_url(@user)
    ^^
test/controllers/wakeboard_sets_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  setup do
^^
test/controllers/wakeboard_sets_controller_test.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @wakeboard_set = wakeboard_sets(:one)
  ^^
test/controllers/wakeboard_sets_controller_test.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should get index" do
^^
test/controllers/wakeboard_sets_controller_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:9:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get wakeboard_sets_url
  ^^
test/controllers/wakeboard_sets_controller_test.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should get new" do
^^
test/controllers/wakeboard_sets_controller_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get new" do
       ^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get new_wakeboard_set_url
  ^^
test/controllers/wakeboard_sets_controller_test.rb:18:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should create wakeboard_set" do
^^
test/controllers/wakeboard_sets_controller_test.rb:18:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create wakeboard_set" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:19:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assert_difference("WakeboardSet.count") do
  ^^
test/controllers/wakeboard_sets_controller_test.rb:19:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_difference("WakeboardSet.count") do
                      ^^^^^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:20:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      post wakeboard_sets_url, params: { wakeboard_set: { current_rider_count: @wakeboard_set.current_rider_count, rider_limit: @wakeboard_set.rider_limit, scheduled_date: @wakeboard_set.scheduled_date } }
    ^^
test/controllers/wakeboard_sets_controller_test.rb:20:101: C: [Correctable] Layout/LineLength: Line is too long. [205/100]
      post wakeboard_sets_url, params: { wakeboard_set: { current_rider_count: @wakeboard_set.current_rider_count, rider_limit: @wakeboard_set.rider_limit, scheduled_date: @wakeboard_set.scheduled_date } }
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:26:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should show wakeboard_set" do
^^
test/controllers/wakeboard_sets_controller_test.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should show wakeboard_set" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:27:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get wakeboard_set_url(@wakeboard_set)
  ^^
test/controllers/wakeboard_sets_controller_test.rb:31:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should get edit" do
^^
test/controllers/wakeboard_sets_controller_test.rb:31:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get edit" do
       ^^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:32:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    get edit_wakeboard_set_url(@wakeboard_set)
  ^^
test/controllers/wakeboard_sets_controller_test.rb:36:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should update wakeboard_set" do
^^
test/controllers/wakeboard_sets_controller_test.rb:36:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update wakeboard_set" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:37:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    patch wakeboard_set_url(@wakeboard_set), params: { wakeboard_set: { current_rider_count: @wakeboard_set.current_rider_count, rider_limit: @wakeboard_set.rider_limit, scheduled_date: @wakeboard_set.scheduled_date } }
  ^^
test/controllers/wakeboard_sets_controller_test.rb:37:101: C: [Correctable] Layout/LineLength: Line is too long. [219/100]
    patch wakeboard_set_url(@wakeboard_set), params: { wakeboard_set: { current_rider_count: @wakeboard_set.current_rider_count, rider_limit: @wakeboard_set.rider_limit, scheduled_date: @wakeboard_set.scheduled_date } }
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:41:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should destroy wakeboard_set" do
^^
test/controllers/wakeboard_sets_controller_test.rb:41:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy wakeboard_set" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:42:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    assert_difference("WakeboardSet.count", -1) do
  ^^
test/controllers/wakeboard_sets_controller_test.rb:42:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_difference("WakeboardSet.count", -1) do
                      ^^^^^^^^^^^^^^^^^^^^
test/controllers/wakeboard_sets_controller_test.rb:43:5: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
      delete wakeboard_set_url(@wakeboard_set)
    ^^
test/models/receipt_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/models/receipt_test.rb:6:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 5).
  # end
  ^^^^^
test/models/user_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/models/user_test.rb:6:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 5).
  # end
  ^^^^^
test/models/wakeboard_set_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/models/wakeboard_set_test.rb:6:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 5).
  # end
  ^^^^^
test/system/receipts_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "application_system_test_case"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  setup do
^^
test/system/receipts_test.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @receipt = receipts(:one)
  ^^
test/system/receipts_test.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "visiting the index" do
^^
test/system/receipts_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "visiting the index" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:9:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit receipts_url
  ^^
test/system/receipts_test.rb:10:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Receipts"
                    ^^^^
test/system/receipts_test.rb:10:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Receipts"
                                ^^^^^^^^^^
test/system/receipts_test.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should create receipt" do
^^
test/system/receipts_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create receipt" do
       ^^^^^^^^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit receipts_url
  ^^
test/system/receipts_test.rb:15:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "New receipt"
             ^^^^^^^^^^^^^
test/system/receipts_test.rb:17:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Date approved", with: @receipt.date_approved
            ^^^^^^^^^^^^^^^
test/system/receipts_test.rb:18:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Date made", with: @receipt.date_made
            ^^^^^^^^^^^
test/system/receipts_test.rb:19:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Date refunded", with: @receipt.date_refunded
            ^^^^^^^^^^^^^^^
test/system/receipts_test.rb:20:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Receipt", with: @receipt.receipt_id
            ^^^^^^^^^
test/system/receipts_test.rb:21:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Stage", with: @receipt.stage
            ^^^^^^^
test/system/receipts_test.rb:22:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "User", with: @receipt.user_id
            ^^^^^^
test/system/receipts_test.rb:23:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Value", with: @receipt.value
            ^^^^^^^
test/system/receipts_test.rb:24:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create Receipt"
             ^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:26:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Receipt was successfully created"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:27:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/receipts_test.rb:30:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should update Receipt" do
^^
test/system/receipts_test.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update Receipt" do
       ^^^^^^^^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:31:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit receipt_url(@receipt)
  ^^
test/system/receipts_test.rb:32:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Edit this receipt", match: :first
             ^^^^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:34:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Date approved", with: @receipt.date_approved
            ^^^^^^^^^^^^^^^
test/system/receipts_test.rb:35:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Date made", with: @receipt.date_made
            ^^^^^^^^^^^
test/system/receipts_test.rb:36:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Date refunded", with: @receipt.date_refunded
            ^^^^^^^^^^^^^^^
test/system/receipts_test.rb:37:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Receipt", with: @receipt.receipt_id
            ^^^^^^^^^
test/system/receipts_test.rb:38:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Stage", with: @receipt.stage
            ^^^^^^^
test/system/receipts_test.rb:39:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "User", with: @receipt.user_id
            ^^^^^^
test/system/receipts_test.rb:40:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Value", with: @receipt.value
            ^^^^^^^
test/system/receipts_test.rb:41:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Update Receipt"
             ^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:43:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Receipt was successfully updated"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:44:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/receipts_test.rb:47:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should destroy Receipt" do
^^
test/system/receipts_test.rb:47:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy Receipt" do
       ^^^^^^^^^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:48:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit receipt_url(@receipt)
  ^^
test/system/receipts_test.rb:49:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Destroy this receipt", match: :first
             ^^^^^^^^^^^^^^^^^^^^^^
test/system/receipts_test.rb:51:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Receipt was successfully destroyed"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/users_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "application_system_test_case"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/users_test.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  setup do
^^
test/system/users_test.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @user = users(:one)
  ^^
test/system/users_test.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "visiting the index" do
^^
test/system/users_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "visiting the index" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/users_test.rb:9:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit users_url
  ^^
test/system/users_test.rb:10:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Users"
                    ^^^^
test/system/users_test.rb:10:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Users"
                                ^^^^^^^
test/system/users_test.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should create user" do
^^
test/system/users_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create user" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/users_test.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit users_url
  ^^
test/system/users_test.rb:15:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "New user"
             ^^^^^^^^^^
test/system/users_test.rb:17:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Email", with: @user.email
            ^^^^^^^
test/system/users_test.rb:18:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Firstname", with: @user.firstname
            ^^^^^^^^^^^
test/system/users_test.rb:19:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "Isadmin" if @user.isAdmin
          ^^^^^^^^^
test/system/users_test.rb:20:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "Isdriver" if @user.isDriver
          ^^^^^^^^^^
test/system/users_test.rb:21:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "Isrider" if @user.isRider
          ^^^^^^^^^
test/system/users_test.rb:22:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "Istreasurer" if @user.isTreasurer
          ^^^^^^^^^^^^^
test/system/users_test.rb:23:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Lastname", with: @user.lastname
            ^^^^^^^^^^
test/system/users_test.rb:24:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Password", with: @user.password
            ^^^^^^^^^^
test/system/users_test.rb:25:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create User"
             ^^^^^^^^^^^^^
test/system/users_test.rb:27:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "User was successfully created"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/users_test.rb:28:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/users_test.rb:31:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should update User" do
^^
test/system/users_test.rb:31:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update User" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/users_test.rb:32:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit user_url(@user)
  ^^
test/system/users_test.rb:33:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Edit this user", match: :first
             ^^^^^^^^^^^^^^^^
test/system/users_test.rb:35:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Email", with: @user.email
            ^^^^^^^
test/system/users_test.rb:36:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Firstname", with: @user.firstname
            ^^^^^^^^^^^
test/system/users_test.rb:37:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "Isadmin" if @user.isAdmin
          ^^^^^^^^^
test/system/users_test.rb:38:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "Isdriver" if @user.isDriver
          ^^^^^^^^^^
test/system/users_test.rb:39:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "Isrider" if @user.isRider
          ^^^^^^^^^
test/system/users_test.rb:40:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "Istreasurer" if @user.isTreasurer
          ^^^^^^^^^^^^^
test/system/users_test.rb:41:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Lastname", with: @user.lastname
            ^^^^^^^^^^
test/system/users_test.rb:42:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Password", with: @user.password
            ^^^^^^^^^^
test/system/users_test.rb:43:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Update User"
             ^^^^^^^^^^^^^
test/system/users_test.rb:45:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "User was successfully updated"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/users_test.rb:46:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/users_test.rb:49:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should destroy User" do
^^
test/system/users_test.rb:49:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy User" do
       ^^^^^^^^^^^^^^^^^^^^^
test/system/users_test.rb:50:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit user_url(@user)
  ^^
test/system/users_test.rb:51:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Destroy this user", match: :first
             ^^^^^^^^^^^^^^^^^^^
test/system/users_test.rb:53:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "User was successfully destroyed"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "application_system_test_case"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  setup do
^^
test/system/wakeboard_sets_test.rb:5:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    @wakeboard_set = wakeboard_sets(:one)
  ^^
test/system/wakeboard_sets_test.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "visiting the index" do
^^
test/system/wakeboard_sets_test.rb:8:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "visiting the index" do
       ^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:9:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_sets_url
  ^^
test/system/wakeboard_sets_test.rb:10:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Wakeboard sets"
                    ^^^^
test/system/wakeboard_sets_test.rb:10:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_selector "h1", text: "Wakeboard sets"
                                ^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should create wakeboard set" do
^^
test/system/wakeboard_sets_test.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should create wakeboard set" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:14:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_sets_url
  ^^
test/system/wakeboard_sets_test.rb:15:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "New wakeboard set"
             ^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:17:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Current rider count", with: @wakeboard_set.current_rider_count
            ^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:18:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Rider limit", with: @wakeboard_set.rider_limit
            ^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:19:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Scheduled date", with: @wakeboard_set.scheduled_date
            ^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:20:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Create Wakeboard set"
             ^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:22:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Wakeboard set was successfully created"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:23:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/wakeboard_sets_test.rb:26:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should update Wakeboard set" do
^^
test/system/wakeboard_sets_test.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should update Wakeboard set" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:27:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_url(@wakeboard_set)
  ^^
test/system/wakeboard_sets_test.rb:28:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Edit this wakeboard set", match: :first
             ^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:30:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Current rider count", with: @wakeboard_set.current_rider_count
            ^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:31:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Rider limit", with: @wakeboard_set.rider_limit
            ^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:32:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "Scheduled date", with: @wakeboard_set.scheduled_date
            ^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:33:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Update Wakeboard set"
             ^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:35:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Wakeboard set was successfully updated"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:36:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Back"
             ^^^^^^
test/system/wakeboard_sets_test.rb:39:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  test "should destroy Wakeboard set" do
^^
test/system/wakeboard_sets_test.rb:39:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should destroy Wakeboard set" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:40:3: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
    visit wakeboard_set_url(@wakeboard_set)
  ^^
test/system/wakeboard_sets_test.rb:41:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Destroy this wakeboard set", match: :first
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/wakeboard_sets_test.rb:43:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_text "Wakeboard set was successfully destroyed"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:1:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= "test"
    ^^^^^^^^^^^
test/test_helper.rb:1:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= "test"
                     ^^^^^^
test/test_helper.rb:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/environment"
                 ^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/test_help"
        ^^^^^^^^^^^^^^^^^
test/test_helper.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  parallelize(workers: :number_of_processors)
^^
test/test_helper.rb:10:1: C: [Correctable] Layout/IndentationWidth: Use 5 (not 2) spaces for indentation.
  fixtures :all
^^
test/test_helper.rb:12:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 5).
  # Add more helper methods to be used by all tests here...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

83 files inspected, 2044 offenses detected, 1819 offenses autocorrectable
